{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gyanshu\\\\webd\\\\projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\DashboardProducer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport NavbarProducer from \"../../components/navbar/NavbarProducer\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport styles from \"./Dashboard.module.css\";\nimport { FormControl, InputLabel, MenuItem, Select, TextField, Chip, Button, Typography } from '@mui/material';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateJob = props => {\n  _s();\n  const [formData, setFormData] = React.useState({\n    title: '',\n    skills: [],\n    jobType: '',\n    duration: '',\n    salary: '',\n    positionsAvailable: '',\n    deadline: null\n  });\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSkillsChange = skills => {\n    setFormData(prevData => ({\n      ...prevData,\n      skills: skills\n    }));\n  };\n  const handleAddSkill = newSkill => {\n    if (newSkill.trim() !== '' && !formData.skills.includes(newSkill)) {\n      handleSkillsChange([...formData.skills, newSkill.trim()]);\n    }\n  };\n  const handleRemoveSkill = skillToRemove => {\n    const updatedSkills = formData.skills.filter(skill => skill !== skillToRemove);\n    handleSkillsChange(updatedSkills);\n  };\n  const handleDeadlineChange = date => {\n    setFormData(prevData => ({\n      ...prevData,\n      deadline: date\n    }));\n  };\n  const handleError = err => toast.error(err, {\n    position: \"bottom-left\"\n  });\n  const handleSuccess = msg => toast.success(msg, {\n    position: \"bottom-right\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8001/createjob\", formData, {\n        withCredentials: true\n      });\n      const {\n        success,\n        message\n      } = response.data;\n      if (success) {\n        handleSuccess(message);\n        props.addJob(formData);\n      } else {\n        handleError(message);\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    } finally {\n      // Reset form values and close the popup\n      setFormData({\n        title: \"\",\n        skills: \"\",\n        jobType: \"\",\n        duration: \"\",\n        salary: \"\",\n        deadline: \"\",\n        positionsAvailable: \"\"\n      });\n      props.toggle();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.popup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup_inner,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Create Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            type: \"text\",\n            name: \"title\",\n            value: formData.title,\n            placeholder: \"Enter Job Title\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Skills\",\n            type: \"text\",\n            name: \"skills\",\n            value: formData.skills.join(', '),\n            placeholder: \"Type and press Enter to add a skill\",\n            onChange: e => handleSkillsChange(e.target.value.split(',')),\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                e.preventDefault();\n                handleAddSkill(e.target.value);\n                e.target.value = '';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chipsContainer,\n            children: formData.skills.map(skill => /*#__PURE__*/_jsxDEV(Chip, {\n              label: skill,\n              onDelete: () => handleRemoveSkill(skill),\n              className: styles.skillChip\n            }, skill, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"jobType\",\n              children: \"Job Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"jobType-label\",\n              id: \"jobType\",\n              value: formData.jobType,\n              onChange: handleOnChange,\n              label: \"Job Type\",\n              name: \"jobType\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"fullTime\",\n                children: \"Full Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"partTime\",\n                children: \"Part Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"contract\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"duration\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"duration-label\",\n              id: \"duration\",\n              value: formData.duration,\n              onChange: handleOnChange,\n              label: \"Duration\",\n              name: \"duration\",\n              children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(month => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: month,\n                children: [month, \" \", month === 1 ? 'month' : 'months']\n              }, month, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Salary\",\n            type: \"number\",\n            name: \"salary\",\n            value: formData.salary,\n            placeholder: \"Enter salary\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Positions Available\",\n            type: \"number\",\n            name: \"positionsAvailable\",\n            value: formData.positionsAvailable,\n            placeholder: \"Enter positions available\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.toggle,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n_s(CreateJob, \"SpkwI2HQ8jBtitnoTW1GZO8Dbgk=\");\n_c = CreateJob;\nconst DashboardProducer = () => {\n  _s2();\n  const [seen, setSeen] = useState(false);\n  const [jobs, setJobs] = useState([]);\n\n  // Fetch jobs from the database when the component mounts\n  useEffect(() => {\n    const token = document.cookie.split('; ').find(row => row.startsWith('token')).split('=')[1];\n    const fetchJobs = async () => {\n      try {\n        let jobsData = localStorage.getItem('jobs');\n        if (jobsData) {\n          setJobs(JSON.parse(jobsData));\n        } else {\n          const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n          console.log('API Response', response.data);\n          jobsData = response.data;\n          if (Array.isArray(jobsData)) {\n            setJobs(jobsData);\n            localStorage.setItem('jobs', JSON.stringify(jobsData));\n          } else {\n            console.error('Invalid data received from the API:', jobsData);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  function togglePop() {\n    setSeen(!seen);\n  }\n  ;\n  const addJob = job => {\n    const newJobs = [...jobs, job];\n    setJobs(newJobs);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: jobs && jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.title,\n          children: [\" \", job.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Available Positions: \", job.positionsAvailable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Skills Required: \", job.skills]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Job Type: \", job.jobType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", job.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Salary: \", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePop,\n      className: styles.create,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }, this), seen ? /*#__PURE__*/_jsxDEV(CreateJob, {\n      toggle: togglePop,\n      addJob: addJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true);\n};\n_s2(DashboardProducer, \"IN8Oc58MRha0nTBCbEvXovqtwKE=\");\n_c2 = DashboardProducer;\nexport default DashboardProducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateJob\");\n$RefreshReg$(_c2, \"DashboardProducer\");","map":{"version":3,"names":["React","useEffect","NavbarProducer","useState","axios","toast","styles","FormControl","InputLabel","MenuItem","Select","TextField","Chip","Button","Typography","AdapterDateFns","LocalizationProvider","DesktopDatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateJob","props","_s","formData","setFormData","title","skills","jobType","duration","salary","positionsAvailable","deadline","handleOnChange","event","name","value","target","prevData","handleSkillsChange","handleAddSkill","newSkill","trim","includes","handleRemoveSkill","skillToRemove","updatedSkills","filter","skill","handleDeadlineChange","date","handleError","err","error","position","handleSuccess","msg","success","handleSubmit","e","preventDefault","response","post","withCredentials","message","data","addJob","console","toggle","className","popup","children","popup_inner","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","placeholder","onChange","join","split","onKeyDown","key","chipsContainer","map","onDelete","skillChip","htmlFor","labelId","id","month","color","onClick","_c","DashboardProducer","_s2","seen","setSeen","jobs","setJobs","token","document","cookie","find","row","startsWith","fetchJobs","jobsData","localStorage","getItem","JSON","parse","get","headers","Authorization","log","Array","isArray","setItem","stringify","togglePop","job","newJobs","cardsContainer","index","cards","create","_c2","$RefreshReg$"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/src/pages/dashboard/DashboardProducer.js"],"sourcesContent":["import React ,{useEffect} from \"react\";\r\nimport NavbarProducer from \"../../components/navbar/NavbarProducer\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport { FormControl, InputLabel, MenuItem, Select, TextField, Chip, Button, Typography } from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\n\r\nconst CreateJob = (props) => {\r\n  const [formData, setFormData] = React.useState({\r\n    title: '',\r\n    skills: [],\r\n    jobType: '',\r\n    duration: '',\r\n    salary: '',\r\n    positionsAvailable: '',\r\n    deadline: null,\r\n  });\r\n\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSkillsChange = (skills) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      skills: skills,\r\n    }));\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (newSkill.trim() !== '' && !formData.skills.includes(newSkill)) {\r\n      handleSkillsChange([...formData.skills, newSkill.trim()]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSkill = (skillToRemove) => {\r\n    const updatedSkills = formData.skills.filter((skill) => skill !== skillToRemove);\r\n    handleSkillsChange(updatedSkills);\r\n  };\r\n\r\n  const handleDeadlineChange = (date) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      deadline: date,\r\n    }));\r\n  };\r\n\r\n  const handleError = (err) =>\r\n    toast.error(err, {\r\n      position: \"bottom-left\",\r\n    });\r\n  const handleSuccess = (msg) =>\r\n    toast.success(msg, {\r\n      position: \"bottom-right\",\r\n    });\r\n\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n    \r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8001/createjob\",\r\n          formData,\r\n          { withCredentials: true }\r\n        );\r\n    \r\n        const { success, message } = response.data;\r\n    \r\n        if (success) {\r\n          handleSuccess(message);\r\n          props.addJob(formData);\r\n        } else {\r\n          handleError(message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error submitting form:\", error);\r\n      } finally {\r\n        // Reset form values and close the popup\r\n        setFormData({\r\n          title: \"\",\r\n          skills: \"\",\r\n          jobType: \"\",\r\n          duration: \"\",\r\n          salary: \"\",\r\n          deadline: \"\",\r\n          positionsAvailable: \"\",\r\n        });\r\n    \r\n        props.toggle();\r\n      }\r\n    };\r\n    \r\n\r\n  return (\r\n      <div className={styles.popup}>\r\n      <div className={styles.popup_inner}>\r\n        <Typography variant=\"h6\">Create Panel</Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              placeholder=\"Enter Job Title\"\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n          <TextField\r\n              label=\"Skills\"\r\n              type=\"text\"\r\n              name=\"skills\"\r\n              value={formData.skills.join(', ')}\r\n              placeholder=\"Type and press Enter to add a skill\"\r\n              onChange={(e) => handleSkillsChange(e.target.value.split(','))}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  e.preventDefault();\r\n                  handleAddSkill(e.target.value);\r\n                  e.target.value = '';\r\n                }\r\n              }}\r\n            />\r\n            <div className={styles.chipsContainer}>\r\n              {formData.skills.map((skill) => (\r\n                <Chip\r\n                  key={skill}\r\n                  label={skill}\r\n                  onDelete={() => handleRemoveSkill(skill)}\r\n                  className={styles.skillChip}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"jobType\">Job Type</InputLabel>\r\n              <Select\r\n                labelId=\"jobType-label\"\r\n                id=\"jobType\"\r\n                value={formData.jobType}\r\n                onChange={handleOnChange}\r\n                label=\"Job Type\"\r\n                name=\"jobType\"\r\n              >\r\n                <MenuItem value=\"fullTime\">Full Time</MenuItem>\r\n                <MenuItem value=\"partTime\">Part Time</MenuItem>\r\n                <MenuItem value=\"contract\">Contract</MenuItem>\r\n                {/* Add more options as needed */}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"duration\">Duration</InputLabel>\r\n              <Select\r\n                labelId=\"duration-label\"\r\n                id=\"duration\"\r\n                value={formData.duration}\r\n                onChange={handleOnChange}\r\n                label=\"Duration\"\r\n                name=\"duration\"\r\n              >\r\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => (\r\n                  <MenuItem key={month} value={month}>\r\n                    {month} {month === 1 ? 'month' : 'months'}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Salary\"\r\n              type=\"number\"\r\n              name=\"salary\"\r\n              value={formData.salary}\r\n              placeholder=\"Enter salary\"\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Positions Available\"\r\n              type=\"number\"\r\n              name=\"positionsAvailable\"\r\n              value={formData.positionsAvailable}\r\n              placeholder=\"Enter positions available\"\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n         \r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Create\r\n          </Button>\r\n        </form>\r\n        <Button onClick={props.toggle}>Close</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\nconst DashboardProducer = () => {\r\n  const [seen, setSeen] = useState(false)\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n\r\n  // Fetch jobs from the database when the component mounts\r\n  useEffect(() => {\r\n    const token = document.cookie.split('; ').find(row => row.startsWith('token')).split('=')[1];\r\n  \r\n    const fetchJobs = async () => {\r\n      try {\r\n        let jobsData = localStorage.getItem('jobs');\r\n  \r\n        if (jobsData) {\r\n          setJobs(JSON.parse(jobsData));\r\n        } else {\r\n          const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", { \r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }, \r\n            withCredentials: true \r\n          });\r\n          console.log('API Response',response.data);\r\n          jobsData = response.data;\r\n  \r\n          if (Array.isArray(jobsData)) {\r\n            setJobs(jobsData);\r\n            localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          } else {\r\n            console.error('Invalid data received from the API:', jobsData);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchJobs();\r\n  }, []);\r\n  \r\n\r\n  function togglePop () {\r\n    setSeen(!seen);\r\n  };\r\n  const addJob = (job) => {\r\n      const newJobs = [...jobs, job];\r\n      setJobs(newJobs);\r\n    }\r\n\r\n\r\n  return (\r\n    <>     \r\n     <NavbarProducer/>\r\n                        <div className={styles.cardsContainer}>\r\n                        {jobs && jobs.map((job, index) => (\r\n                          <div key={index} className={styles.cards}>\r\n                            <h3 className={styles.title}> {job.title}</h3>\r\n                            <h3>Available Positions: {job.positionsAvailable}</h3>\r\n\r\n                            <h3>Skills Required: {job.skills}</h3>\r\n                            <h3>Job Type: {job.jobType}</h3>\r\n                            <h3>Duration: {job.duration}</h3>\r\n                            <h3>Salary: {job.salary}</h3>\r\n                          </div>\r\n                        ))}\r\n                        </div>\r\n                        <button onClick={togglePop} className={styles.create}>Create</button>\r\n\r\n                        {seen ? <CreateJob toggle={togglePop} addJob={addJob} /> : null}\r\n\r\n    </>\r\n    \r\n  );\r\n};\r\nexport default DashboardProducer ;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}