{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gyanshu\\\\webd\\\\projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\DashboardProducer.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardProducer = () => {\n  _s();\n  const [seen, setSeen] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const [selectedJobIndex, setSelectedJobIndex] = useState(null);\n\n  // Fetch jobs from the database when the component mounts\n  useEffect(() => {\n    const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\n    const token = tokenCookie ? tokenCookie.split('=')[1] : null;\n    const fetchJobs = async () => {\n      try {\n        let jobsData = localStorage.getItem('jobs');\n        if (jobsData) {\n          setJobs(JSON.parse(jobsData));\n        } else {\n          const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n          console.log('API Response', response.data);\n          jobsData = response.data;\n          if (Array.isArray(jobsData)) {\n            setJobs(jobsData);\n            localStorage.setItem('jobs', JSON.stringify(jobsData));\n          } else {\n            console.error('Invalid data received from the API:', jobsData);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleDelete = async () => {\n    if (selectedJobIndex !== null) {\n      const jobIdToDelete = jobs[selectedJobIndex]._id; // Assuming your job objects have an \"_id\" property\n\n      try {\n        // Delete job from the database\n        await axios.delete(`http://localhost:8001/jobs/deletejob/${jobIdToDelete}`, {\n          withCredentials: true\n        });\n\n        // Remove job from local state\n        const updatedJobs = [...jobs];\n        updatedJobs.splice(selectedJobIndex, 1);\n        setJobs(updatedJobs);\n\n        // Update local storage with new data\n        localStorage.setItem('jobs', JSON.stringify(updatedJobs));\n\n        // Reset selectedJobIndex\n        setSelectedJobIndex(null);\n      } catch (error) {\n        console.error(\"Error deleting job:\", error);\n      }\n    }\n  };\n  function togglePop(index) {\n    setSeen(!seen);\n    setSelectedJobIndex(index);\n  }\n  const addJob = job => {\n    const newJobs = [...jobs, job];\n    setJobs(newJobs);\n    localStorage.setItem('jobs', JSON.stringify(newJobs));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: jobs && jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.title,\n          children: [\" \", job.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Available Positions: \", job.positionsAvailable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Skills Required: \", job.skills]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Job Type: \", job.jobType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", job.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Salary: \", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.delete,\n          onClick: () => togglePop(index),\n          children: \"Delete Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePop,\n      className: styles.create,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), seen ? /*#__PURE__*/_jsxDEV(CreateJob, {\n      toggle: togglePop,\n      addJob: addJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }, this) : null, selectedJobIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.deleteConfirmation,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this job?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setSelectedJobIndex(null),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(DashboardProducer, \"zCgo3ZYEMdeKdiXxmrLGtmWHXW8=\");\n_c = DashboardProducer;\nexport default DashboardProducer;\nvar _c;\n$RefreshReg$(_c, \"DashboardProducer\");","map":{"version":3,"names":["DashboardProducer","_s","seen","setSeen","useState","jobs","setJobs","selectedJobIndex","setSelectedJobIndex","useEffect","tokenCookie","document","cookie","split","find","row","startsWith","token","fetchJobs","jobsData","localStorage","getItem","JSON","parse","response","axios","get","headers","Authorization","withCredentials","console","log","data","Array","isArray","setItem","stringify","error","handleDelete","jobIdToDelete","_id","delete","updatedJobs","splice","togglePop","index","addJob","job","newJobs","_jsxDEV","_Fragment","children","NavbarProducer","fileName","_jsxFileName","lineNumber","columnNumber","className","styles","cardsContainer","map","cards","title","positionsAvailable","skills","jobType","duration","salary","onClick","create","CreateJob","toggle","deleteConfirmation","Button","variant","color","_c","$RefreshReg$"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/src/pages/dashboard/DashboardProducer.js"],"sourcesContent":["const DashboardProducer = () => {\r\n  const [seen, setSeen] = useState(false);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [selectedJobIndex, setSelectedJobIndex] = useState(null);\r\n\r\n  // Fetch jobs from the database when the component mounts\r\n  useEffect(() => {\r\n    const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\r\n    const token = tokenCookie ? tokenCookie.split('=')[1] : null;\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        let jobsData = localStorage.getItem('jobs');\r\n\r\n        if (jobsData) {\r\n          setJobs(JSON.parse(jobsData));\r\n        } else {\r\n          const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            },\r\n            withCredentials: true\r\n          });\r\n\r\n          console.log('API Response', response.data);\r\n\r\n          jobsData = response.data;\r\n\r\n          if (Array.isArray(jobsData)) {\r\n            setJobs(jobsData);\r\n            localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          } else {\r\n            console.error('Invalid data received from the API:', jobsData);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleDelete = async () => {\r\n    if (selectedJobIndex !== null) {\r\n      const jobIdToDelete = jobs[selectedJobIndex]._id; // Assuming your job objects have an \"_id\" property\r\n\r\n      try {\r\n        // Delete job from the database\r\n        await axios.delete(`http://localhost:8001/jobs/deletejob/${jobIdToDelete}`, {\r\n          withCredentials: true\r\n        });\r\n\r\n        // Remove job from local state\r\n        const updatedJobs = [...jobs];\r\n        updatedJobs.splice(selectedJobIndex, 1);\r\n        setJobs(updatedJobs);\r\n\r\n        // Update local storage with new data\r\n        localStorage.setItem('jobs', JSON.stringify(updatedJobs));\r\n\r\n        // Reset selectedJobIndex\r\n        setSelectedJobIndex(null);\r\n      } catch (error) {\r\n        console.error(\"Error deleting job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function togglePop(index) {\r\n    setSeen(!seen);\r\n    setSelectedJobIndex(index);\r\n  }\r\n\r\n  const addJob = (job) => {\r\n    const newJobs = [...jobs, job];\r\n    setJobs(newJobs);\r\n    localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarProducer />\r\n      <div className={styles.cardsContainer}>\r\n        {jobs && jobs.map((job, index) => (\r\n          <div key={index} className={styles.cards}>\r\n            <h3 className={styles.title}> {job.title}</h3>\r\n            <h3>Available Positions: {job.positionsAvailable}</h3>\r\n            <h3>Skills Required: {job.skills}</h3>\r\n            <h3>Job Type: {job.jobType}</h3>\r\n            <h3>Duration: {job.duration}</h3>\r\n            <h3>Salary: {job.salary}</h3>\r\n            <button className={styles.delete} onClick={() => togglePop(index)}>Delete Job</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={togglePop} className={styles.create}>Create</button>\r\n      {seen ? <CreateJob toggle={togglePop} addJob={addJob} /> : null}\r\n      {selectedJobIndex !== null && (\r\n        <div className={styles.deleteConfirmation}>\r\n          <p>Are you sure you want to delete this job?</p>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleDelete}>Yes</Button>\r\n          <Button onClick={() => setSelectedJobIndex(null)}>No</Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardProducer;\r\n"],"mappings":";;;;AAAA,MAAMA,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAK,SAAS,CAAC,MAAM;IACd,MAAMC,WAAW,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC;IACpF,MAAMC,KAAK,GAAGP,WAAW,GAAGA,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;IAE5D,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAE3C,IAAIF,QAAQ,EAAE;UACZb,OAAO,CAACgB,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;QAC/B,CAAC,MAAM;UACL,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,oCAAoC,EAAE;YACrEC,OAAO,EAAE;cACPC,aAAa,EAAG,UAASX,KAAM;YACjC,CAAC;YACDY,eAAe,EAAE;UACnB,CAAC,CAAC;UAEFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,QAAQ,CAACQ,IAAI,CAAC;UAE1Cb,QAAQ,GAAGK,QAAQ,CAACQ,IAAI;UAExB,IAAIC,KAAK,CAACC,OAAO,CAACf,QAAQ,CAAC,EAAE;YAC3Bb,OAAO,CAACa,QAAQ,CAAC;YACjBC,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACjB,QAAQ,CAAC,CAAC;UACxD,CAAC,MAAM;YACLW,OAAO,CAACO,KAAK,CAAC,qCAAqC,EAAElB,QAAQ,CAAC;UAChE;QACF;MACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI/B,gBAAgB,KAAK,IAAI,EAAE;MAC7B,MAAMgC,aAAa,GAAGlC,IAAI,CAACE,gBAAgB,CAAC,CAACiC,GAAG,CAAC,CAAC;;MAElD,IAAI;QACF;QACA,MAAMf,KAAK,CAACgB,MAAM,CAAE,wCAAuCF,aAAc,EAAC,EAAE;UAC1EV,eAAe,EAAE;QACnB,CAAC,CAAC;;QAEF;QACA,MAAMa,WAAW,GAAG,CAAC,GAAGrC,IAAI,CAAC;QAC7BqC,WAAW,CAACC,MAAM,CAACpC,gBAAgB,EAAE,CAAC,CAAC;QACvCD,OAAO,CAACoC,WAAW,CAAC;;QAEpB;QACAtB,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACM,WAAW,CAAC,CAAC;;QAEzD;QACAlC,mBAAmB,CAAC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAO6B,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAED,SAASO,SAASA,CAACC,KAAK,EAAE;IACxB1C,OAAO,CAAC,CAACD,IAAI,CAAC;IACdM,mBAAmB,CAACqC,KAAK,CAAC;EAC5B;EAEA,MAAMC,MAAM,GAAIC,GAAG,IAAK;IACtB,MAAMC,OAAO,GAAG,CAAC,GAAG3C,IAAI,EAAE0C,GAAG,CAAC;IAC9BzC,OAAO,CAAC0C,OAAO,CAAC;IAChB5B,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACY,OAAO,CAAC,CAAC;EACvD,CAAC;EAED,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA,CAACG,cAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBP,OAAA;MAAKQ,SAAS,EAAEC,MAAM,CAACC,cAAe;MAAAR,QAAA,EACnC9C,IAAI,IAAIA,IAAI,CAACuD,GAAG,CAAC,CAACb,GAAG,EAAEF,KAAK,kBAC3BI,OAAA;QAAiBQ,SAAS,EAAEC,MAAM,CAACG,KAAM;QAAAV,QAAA,gBACvCF,OAAA;UAAIQ,SAAS,EAAEC,MAAM,CAACI,KAAM;UAAAX,QAAA,GAAC,GAAC,EAACJ,GAAG,CAACe,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CP,OAAA;UAAAE,QAAA,GAAI,uBAAqB,EAACJ,GAAG,CAACgB,kBAAkB;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtDP,OAAA;UAAAE,QAAA,GAAI,mBAAiB,EAACJ,GAAG,CAACiB,MAAM;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCP,OAAA;UAAAE,QAAA,GAAI,YAAU,EAACJ,GAAG,CAACkB,OAAO;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChCP,OAAA;UAAAE,QAAA,GAAI,YAAU,EAACJ,GAAG,CAACmB,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjCP,OAAA;UAAAE,QAAA,GAAI,UAAQ,EAACJ,GAAG,CAACoB,MAAM;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BP,OAAA;UAAQQ,SAAS,EAAEC,MAAM,CAACjB,MAAO;UAAC2B,OAAO,EAAEA,CAAA,KAAMxB,SAAS,CAACC,KAAK,CAAE;UAAAM,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAP9EX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNP,OAAA;MAAQmB,OAAO,EAAExB,SAAU;MAACa,SAAS,EAAEC,MAAM,CAACW,MAAO;MAAAlB,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpEtD,IAAI,gBAAG+C,OAAA,CAACqB,SAAS;MAACC,MAAM,EAAE3B,SAAU;MAACE,MAAM,EAAEA;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,EAC9DjD,gBAAgB,KAAK,IAAI,iBACxB0C,OAAA;MAAKQ,SAAS,EAAEC,MAAM,CAACc,kBAAmB;MAAArB,QAAA,gBACxCF,OAAA;QAAAE,QAAA,EAAG;MAAyC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChDP,OAAA,CAACwB,MAAM;QAACC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACP,OAAO,EAAE9B,YAAa;QAAAa,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/EP,OAAA,CAACwB,MAAM;QAACL,OAAO,EAAEA,CAAA,KAAM5D,mBAAmB,CAAC,IAAI,CAAE;QAAA2C,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACvD,EAAA,CA3GID,iBAAiB;AAAA4E,EAAA,GAAjB5E,iBAAiB;AA6GvB,eAAeA,iBAAiB;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}