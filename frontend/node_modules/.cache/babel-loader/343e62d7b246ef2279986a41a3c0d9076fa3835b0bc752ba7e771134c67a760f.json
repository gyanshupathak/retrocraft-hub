{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gyanshu\\\\webd\\\\projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\applicants\\\\ViewApplicants.js\",\n  _s = $RefreshSig$();\n// ViewApplicants.js\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NavbarProducer from '../../components/navbar/NavbarProducer';\nimport styles from './ViewApplicants.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewApplicants = ({\n  jobId\n}) => {\n  _s();\n  console;\n  const [applicants, setApplicants] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchApplicants = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8001/jobs/applied?jobId=${jobId}`, {\n          withCredentials: true\n        });\n        const {\n          success,\n          data,\n          message\n        } = response.data;\n        if (success) {\n          setApplicants(data);\n        } else {\n          setError(message);\n        }\n      } catch (error) {\n        console.error('Error fetching applicants:', error);\n        setError('An error occurred while fetching applicants.');\n      }\n    };\n    fetchApplicants();\n  }, [jobId]);\n\n  // const handleAccept = async (applicantId) => {\n  //   // Implement the logic to accept the applicant with the given ID\n  //   try {\n  //     const response = await axios.post(`http://localhost:8001/jobs/acceptapplicant/${applicantId}`, {\n  //       withCredentials: true,\n  //     });\n\n  //     const { success, message } = response.data;\n\n  //     if (success) {\n  //       // Refresh the list of applicants after accepting\n  //       fetchApplicants();\n  //       console.log(message);\n  //     } else {\n  //       console.error(message);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error accepting applicant:', error);\n  //   }\n  // };\n\n  // const handleReject = async (applicantId) => {\n  //   // Implement the logic to reject the applicant with the given ID\n  //   try {\n  //     const response = await axios.post(`http://localhost:8001/jobs/rejectapplicant/${applicantId}`, {\n  //       withCredentials: true,\n  //     });\n\n  //     const { success, message } = response.data;\n\n  //     if (success) {\n  //       // Refresh the list of applicants after rejecting\n  //       fetchApplicants();\n  //       console.log(message);\n  //     } else {\n  //       console.error(message);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error rejecting applicant:', error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.viewApplicantsContainer,\n    children: [/*#__PURE__*/_jsxDEV(NavbarProducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.applicantsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Applicants for Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), applicants && applicants.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicants.map(applicant => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), \" \", applicant.userId.username, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SOP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 75\n          }, this), \" \", applicant.sopText, /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, applicant._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No applicants found for this job.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewApplicants, \"snSJm25h2j61BDY+5soWoaZkYv8=\");\n_c = ViewApplicants;\nexport default ViewApplicants;\nvar _c;\n$RefreshReg$(_c, \"ViewApplicants\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavbarProducer","styles","jsxDEV","_jsxDEV","ViewApplicants","jobId","_s","console","applicants","setApplicants","error","setError","fetchApplicants","response","get","withCredentials","success","data","message","className","viewApplicantsContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","applicantsContainer","length","map","applicant","userId","username","sopText","_id","_c","$RefreshReg$"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/src/pages/applicants/ViewApplicants.js"],"sourcesContent":["// ViewApplicants.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport NavbarProducer from '../../components/navbar/NavbarProducer';\r\nimport styles from './ViewApplicants.module.css';\r\n\r\nconst ViewApplicants = ({ jobId }) => {\r\n  console\r\n  const [applicants, setApplicants] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchApplicants = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8001/jobs/applied?jobId=${jobId}`, {\r\n          withCredentials: true,\r\n        });\r\n\r\n        const { success, data, message } = response.data;\r\n\r\n        if (success) {\r\n          setApplicants(data);\r\n        } else {\r\n          setError(message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching applicants:', error);\r\n        setError('An error occurred while fetching applicants.');\r\n      }\r\n    };\r\n\r\n    fetchApplicants();\r\n  }, [jobId]);\r\n\r\n  // const handleAccept = async (applicantId) => {\r\n  //   // Implement the logic to accept the applicant with the given ID\r\n  //   try {\r\n  //     const response = await axios.post(`http://localhost:8001/jobs/acceptapplicant/${applicantId}`, {\r\n  //       withCredentials: true,\r\n  //     });\r\n\r\n  //     const { success, message } = response.data;\r\n\r\n  //     if (success) {\r\n  //       // Refresh the list of applicants after accepting\r\n  //       fetchApplicants();\r\n  //       console.log(message);\r\n  //     } else {\r\n  //       console.error(message);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error accepting applicant:', error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleReject = async (applicantId) => {\r\n  //   // Implement the logic to reject the applicant with the given ID\r\n  //   try {\r\n  //     const response = await axios.post(`http://localhost:8001/jobs/rejectapplicant/${applicantId}`, {\r\n  //       withCredentials: true,\r\n  //     });\r\n\r\n  //     const { success, message } = response.data;\r\n\r\n  //     if (success) {\r\n  //       // Refresh the list of applicants after rejecting\r\n  //       fetchApplicants();\r\n  //       console.log(message);\r\n  //     } else {\r\n  //       console.error(message);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error rejecting applicant:', error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className={styles.viewApplicantsContainer}>\r\n      <NavbarProducer />\r\n      {error ? (\r\n        <p className={styles.errorMessage}>{error}</p>\r\n      ) : (\r\n        <div className={styles.applicantsContainer}>\r\n          <h2>Applicants for Job</h2>\r\n          {applicants && applicants.length > 0 ? (\r\n            <ul>\r\n              {applicants.map((applicant) => (\r\n                <li key={applicant._id}>\r\n                  <strong>Username:</strong> {applicant.userId.username}, <strong>SOP:</strong> {applicant.sopText}\r\n                  <button >Accept</button>\r\n                  <button >Reject</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No applicants found for this job.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewApplicants;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}