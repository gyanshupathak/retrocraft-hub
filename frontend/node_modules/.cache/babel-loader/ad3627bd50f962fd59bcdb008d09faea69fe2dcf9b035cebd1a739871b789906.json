{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import Navbar from\"../../components/navbar/NavbarFreelancer\";import styles from\"./Jobs.module.css\";import{FilterList}from\"@mui/icons-material\";import{Button,Dialog,DialogTitle,IconButton,DialogContent,Slider}from\"@mui/material\";import{FormControl,InputLabel,MenuItem,Select,TextField,Typography}from\"@mui/material\";import Chip from\"@material-ui/core/Chip\";import Footer from\"../../components/Footer/Footer\";import noData from\"../../assets/images/home/nodata.jpg\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Jobs=()=>{const[profileData,setProfileData]=useState({});const[jobs,setJobs]=useState([]);const[appliedJobs,setAppliedJobs]=useState([]);const[filterLocation,setFilterLocation]=useState(null);const[filterJobType,setFilterJobType]=useState(null);const[filterDuration,setFilterDuration]=useState([1,12]);const[filterSalary,setFilterSalary]=useState([10000,100000]);const[filterVisible,setFilterVisible]=useState(false);const[filterTitle,setFilterTitle]=useState(\"\");const[sopText,setSopText]=useState(\"\");// New state for SOP text\nconst[sopDialogVisible,setSopDialogVisible]=useState(false);// State to control SOP dialog visibility\nconst[jobAppliedStatus,setJobAppliedStatus]=useState({});const[sopJobIndex,setSopJobIndex]=useState(null);// Set jobAppliedStatus state with data from localStorage when component mounts\nuseEffect(()=>{// Retrieve jobAppliedStatus from localStorage\nconst storedJobAppliedStatus=JSON.parse(localStorage.getItem(\"jobAppliedStatus\"))||{};// Set the jobAppliedStatus state\nsetJobAppliedStatus(storedJobAppliedStatus);},[]);// Empty dependency array ensures this runs only once when component mounts\n// Fetch jobs from the database when the component mounts or when filters change\nuseEffect(()=>{const fetchJobs=async()=>{try{const token=sessionStorage.getItem(\"token\");const response=await axios.get(\"http://localhost:8001/jobs/getjobs\",{params:{jobType:filterJobType,duration:filterDuration,salary:filterSalary,title:filterTitle,location:filterLocation},headers:{Authorization:\"Bearer \".concat(token)},withCredentials:true});const jobsData=response.data;if(Array.isArray(jobsData.jobs)){// Retrieve the current jobAppliedStatus from localStorage\nconst storedJobAppliedStatus=JSON.parse(localStorage.getItem(\"jobAppliedStatus\"))||{};// Update jobs array to include applied status\nconst jobsWithAppliedStatus=jobsData.jobs.map(job=>({...job,isApplied:job._id in storedJobAppliedStatus?storedJobAppliedStatus[job._id]:false}));// Update jobs array with the applied status\nsetJobs(jobsWithAppliedStatus);// Save the updated jobs array to localStorage\nlocalStorage.setItem(\"jobs\",JSON.stringify(jobsWithAppliedStatus));// Initialize jobAppliedStatus with the stored data from localStorage\nsetJobAppliedStatus(storedJobAppliedStatus);}else{console.error(\"Invalid data received from the API:\",jobsData);}}catch(error){console.error(\"Error fetching applied jobs:\",error.response||error);}};fetchJobs();},[filterDuration,filterJobType,filterLocation,filterSalary,filterTitle]);const handleApply=async jobIndex=>{// Check if the job is in the applied jobs list\nconst job=jobs[jobIndex];const isApplied=appliedJobs.some(appliedJob=>appliedJob._id===job._id);// If the job is not already applied for, update the applied status and open the SOP dialog\nif(!isApplied){setJobAppliedStatus(prevStatus=>{const updatedStatus={...prevStatus,[job._id]:true// Use job._id as the key for jobAppliedStatus\n};// Update the jobs state\nsetJobs(prevJobs=>{const updatedJobs=[...prevJobs];updatedJobs[jobIndex]={...updatedJobs[jobIndex],isApplied:true};return updatedJobs;});return updatedStatus;});setSopDialogVisible(true);setSopJobIndex(jobIndex);}};const handleApplySop=async()=>{try{// Close the SOP dialog\nsetSopDialogVisible(false);// Get the job index for which the user is applying\nconst jobIndex=sopJobIndex;const token=sessionStorage.getItem(\"token\");// Apply for the job\nconst response=await axios.post(\"http://localhost:8001/jobs/apply\",{sopText:sopText,jobId:jobs[jobIndex]._id},{headers:{Authorization:\"Bearer \".concat(token)},withCredentials:true});// If the request was successful, update the applied status for the corresponding job\nif(response.status===200){const jobId=jobs[jobIndex]._id;// Update the applied jobs list\nsetAppliedJobs(prevJobs=>[...prevJobs,jobs[jobIndex]]);// Update the applied status for the corresponding job\nsetJobAppliedStatus(prevStatus=>{const updatedStatus={...prevStatus,[jobId]:true};// Store the updated applied status in localStorage\nlocalStorage.setItem(\"jobAppliedStatus\",JSON.stringify(updatedStatus));// Return the updated status to update the state\nreturn updatedStatus;});// This will update the button text from \"Apply\" to \"Applied\"\nsetJobs(prevJobs=>{const updatedJobs=[...prevJobs];updatedJobs[jobIndex].isApplied=true;return updatedJobs;});}else{console.error(\"Job application failed:\",response.data);}}catch(error){console.error(\"Error applying for job:\",error);}};useEffect(()=>{const fetchProfileData=async()=>{const token=sessionStorage.getItem(\"token\");try{// Fetch jobs\nconst response=await axios.get(\"http://localhost:8001/jobs/getjobs\",{headers:{Authorization:\"Bearer \".concat(token)},withCredentials:true});const jobsData=response.data;if(Array.isArray(jobsData.jobs)){setJobs(jobsData.jobs);// Fetch profile data for each job's producer\nconst profileData={};for(const job of jobsData.jobs){const userId=job.userId;const{data}=await axios.get(\"http://localhost:8001/profile/getproducerprofile/\".concat(userId),{headers:{Authorization:\"Bearer \".concat(token)}},{withCredentials:true});const{success,profile}=data;if(success){profileData[userId]=profile;}else{console.error(\"Failed to fetch profile data:\",data);}}setProfileData(profileData);}else{console.error(\"Invalid data received from the API:\",jobsData);}}catch(error){console.error(\"Error fetching data:\",error);}};fetchProfileData();},[]);const handleApplyFilters=()=>{setFilterVisible(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:styles.Jobs,children:jobs.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.filterIconContainer,children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setFilterVisible(true),className:styles.filterIcon,children:/*#__PURE__*/_jsx(FilterList,{})})}),/*#__PURE__*/_jsx(\"div\",{className:styles.cardsContainer,children:jobs&&jobs.map((job,index)=>{const userId=job.userId;const isApplied=appliedJobs.some(appliedJob=>appliedJob._id===job._id);const formattedLocation=job&&job.location?job.location.replace(/([a-z])([A-Z])/g,\"$1 $2\"):\"\";return/*#__PURE__*/_jsxs(\"div\",{className:styles.jobCards,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.photoWrapper,children:[/*#__PURE__*/_jsx(\"img\",{src:profileData&&profileData[userId]&&profileData[userId].profileImage?\"http://localhost:8001/\".concat(profileData[userId].profileImage.replace(/\\\\/g,\"/\")):\"\",alt:\"Profile\"}),/*#__PURE__*/_jsxs(\"h3\",{className:styles.by,children:[\" \",\"-\",profileData[userId]&&profileData[userId].username,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.jobSpecs,children:[/*#__PURE__*/_jsxs(\"h3\",{className:styles.title,children:[\" \",job.title]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Available Positions :\",job.positionsAvailable]}),/*#__PURE__*/_jsxs(\"h3\",{className:styles.specs,children:[\"Skills Required:\",\" \",job.skills.map((skill,index)=>/*#__PURE__*/_jsx(Chip,{label:skill,className:styles.chip},index))]}),\" \",/*#__PURE__*/_jsxs(\"h3\",{children:[\"Job Type : \",job.jobType]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Duration : \",job.duration]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Salary : \",job.salary]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Location :\",formattedLocation]}),/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles.apply,\" \").concat(isApplied?styles.appliedButton:\"\"),onClick:()=>handleApply(index),disabled:job.isApplied,children:job.isApplied?\"Applied\":\"Apply\"})]})]},index);})}),/*#__PURE__*/_jsxs(Dialog,{open:filterVisible,onClose:()=>setFilterVisible(false),className:styles.dialogContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.filterContainer,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Filter Options\"}),/*#__PURE__*/_jsxs(DialogContent,{className:styles.dialogContent,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Location\"}),/*#__PURE__*/_jsxs(FormControl,{className:styles.formElement,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"filterLocation\",children:\"Select Location Type\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"filterLocation-label\",id:\"filterLocation\",value:filterLocation||\"\",onChange:e=>setFilterLocation(e.target.value),label:\"Select Location\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"onSite\",children:\"On Site\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"workFromHome\",children:\"Work From Home\"})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Job Type\"}),/*#__PURE__*/_jsxs(FormControl,{className:styles.formElement,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"filterJobType\",children:\"Select Job Type\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"filterJobType-label\",id:\"filterJobType\",value:filterJobType||\"\",onChange:e=>setFilterJobType(e.target.value),label:\"Select Job Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"fullTime\",children:\"Full Time\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"partTime\",children:\"Part Time\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"contract\",children:\"Contract\"})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Salary\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.sliderContainer,children:/*#__PURE__*/_jsx(Slider,{value:filterSalary,onChange:(event,newValue)=>setFilterSalary(newValue),valueLabelDisplay:\"auto\",min:10000,max:100000,step:10000})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Duration\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.sliderContainer,children:/*#__PURE__*/_jsx(Slider,{value:filterDuration,onChange:(event,newValue)=>setFilterDuration(newValue),valueLabelDisplay:\"auto\",min:1,max:12,step:1})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.formElement,children:/*#__PURE__*/_jsxs(TextField,{label:\"Select Title\",select:true,value:filterTitle||\"\",onChange:e=>setFilterTitle(e.target.value),variant:\"outlined\",fullWidth:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Video Editor\",children:\"Video Editor\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Graphic Designer\",children:\"Designer\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Sound Engineer\",children:\"Sound Engineer\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.applyButtonContainer,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleApplyFilters,children:\"Apply\"})})]}),/*#__PURE__*/_jsxs(Dialog,{open:sopDialogVisible,onClose:()=>setSopDialogVisible(false),className:styles.dialogContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.filterContainer,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Write Your Statement of Purpose (SOP)\"}),/*#__PURE__*/_jsx(DialogContent,{className:styles.dialogContent,children:/*#__PURE__*/_jsx(TextField,{label:\"SOP\",multiline:true,rows:4,variant:\"outlined\",fullWidth:true,value:sopText,onChange:e=>setSopText(e.target.value)})})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.applyButtonContainer,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:styles.sop,onClick:handleApplySop,children:\"Apply\"})})]})]}):/*#__PURE__*/_jsx(\"img\",{src:noData,className:styles.noData})}),/*#__PURE__*/_jsx(Footer,{})]});};export default Jobs;","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","styles","FilterList","Button","Dialog","DialogTitle","IconButton","DialogContent","Slider","FormControl","InputLabel","MenuItem","Select","TextField","Typography","Chip","Footer","noData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Jobs","profileData","setProfileData","jobs","setJobs","appliedJobs","setAppliedJobs","filterLocation","setFilterLocation","filterJobType","setFilterJobType","filterDuration","setFilterDuration","filterSalary","setFilterSalary","filterVisible","setFilterVisible","filterTitle","setFilterTitle","sopText","setSopText","sopDialogVisible","setSopDialogVisible","jobAppliedStatus","setJobAppliedStatus","sopJobIndex","setSopJobIndex","storedJobAppliedStatus","JSON","parse","localStorage","getItem","fetchJobs","token","sessionStorage","response","get","params","jobType","duration","salary","title","location","headers","Authorization","concat","withCredentials","jobsData","data","Array","isArray","jobsWithAppliedStatus","map","job","isApplied","_id","setItem","stringify","console","error","handleApply","jobIndex","some","appliedJob","prevStatus","updatedStatus","prevJobs","updatedJobs","handleApplySop","post","jobId","status","fetchProfileData","userId","success","profile","handleApplyFilters","children","className","length","filterIconContainer","onClick","filterIcon","cardsContainer","index","formattedLocation","replace","jobCards","photoWrapper","src","profileImage","alt","by","username","jobSpecs","positionsAvailable","specs","skills","skill","label","chip","apply","appliedButton","disabled","open","onClose","dialogContainer","filterContainer","dialogContent","variant","formElement","htmlFor","labelId","id","value","onChange","e","target","sliderContainer","event","newValue","valueLabelDisplay","min","max","step","select","fullWidth","applyButtonContainer","color","multiline","rows","sop"],"sources":["D:/Development/Good Projects/retrocraft-hub/frontend/src/pages/jobs/Jobs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../../components/navbar/NavbarFreelancer\";\r\nimport styles from \"./Jobs.module.css\";\r\nimport { FilterList } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  IconButton,\r\n  DialogContent,\r\n  Slider,\r\n} from \"@mui/material\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport noData from \"../../assets/images/home/nodata.jpg\";\r\n\r\nconst Jobs = () => {\r\n  const [profileData, setProfileData] = useState({});\r\n  const [jobs, setJobs] = useState([]);\r\n  const [appliedJobs, setAppliedJobs] = useState([]);\r\n  const [filterLocation, setFilterLocation] = useState(null);\r\n  const [filterJobType, setFilterJobType] = useState(null);\r\n  const [filterDuration, setFilterDuration] = useState([1, 12]);\r\n  const [filterSalary, setFilterSalary] = useState([10000, 100000]);\r\n  const [filterVisible, setFilterVisible] = useState(false);\r\n  const [filterTitle, setFilterTitle] = useState(\"\");\r\n  const [sopText, setSopText] = useState(\"\"); // New state for SOP text\r\n  const [sopDialogVisible, setSopDialogVisible] = useState(false); // State to control SOP dialog visibility\r\n  const [jobAppliedStatus, setJobAppliedStatus] = useState({});\r\n  const [sopJobIndex, setSopJobIndex] = useState(null);\r\n\r\n  // Set jobAppliedStatus state with data from localStorage when component mounts\r\n  useEffect(() => {\r\n    // Retrieve jobAppliedStatus from localStorage\r\n    const storedJobAppliedStatus =\r\n      JSON.parse(localStorage.getItem(\"jobAppliedStatus\")) || {};\r\n\r\n    // Set the jobAppliedStatus state\r\n    setJobAppliedStatus(storedJobAppliedStatus);\r\n  }, []); // Empty dependency array ensures this runs only once when component mounts\r\n\r\n  \r\n  // Fetch jobs from the database when the component mounts or when filters change\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n\r\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\r\n          params: {\r\n            jobType: filterJobType,\r\n            duration: filterDuration,\r\n            salary: filterSalary,\r\n            title: filterTitle,\r\n            location: filterLocation,\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          withCredentials: true,\r\n        });\r\n\r\n        const jobsData = response.data;\r\n\r\n        if (Array.isArray(jobsData.jobs)) {\r\n          // Retrieve the current jobAppliedStatus from localStorage\r\n          const storedJobAppliedStatus =\r\n            JSON.parse(localStorage.getItem(\"jobAppliedStatus\")) || {};\r\n\r\n         \r\n\r\n          // Update jobs array to include applied status\r\n          const jobsWithAppliedStatus = jobsData.jobs.map((job) => ({\r\n            ...job,\r\n            isApplied:\r\n              job._id in storedJobAppliedStatus\r\n                ? storedJobAppliedStatus[job._id]\r\n                : false,\r\n          }));\r\n\r\n          // Update jobs array with the applied status\r\n          setJobs(jobsWithAppliedStatus);\r\n          // Save the updated jobs array to localStorage\r\n          localStorage.setItem(\"jobs\", JSON.stringify(jobsWithAppliedStatus));\r\n\r\n           // Initialize jobAppliedStatus with the stored data from localStorage\r\n           setJobAppliedStatus(storedJobAppliedStatus);\r\n        } else {\r\n          console.error(\"Invalid data received from the API:\", jobsData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching applied jobs:\", error.response || error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [\r\n    filterDuration,\r\n    filterJobType,\r\n    filterLocation,\r\n    filterSalary,\r\n    filterTitle,\r\n  ]);\r\n\r\n  const handleApply = async (jobIndex) => {\r\n    // Check if the job is in the applied jobs list\r\n    const job = jobs[jobIndex];\r\n    const isApplied = appliedJobs.some(\r\n      (appliedJob) => appliedJob._id === job._id\r\n    );\r\n\r\n   // If the job is not already applied for, update the applied status and open the SOP dialog\r\n  if (!isApplied) {\r\n    setJobAppliedStatus((prevStatus) => {\r\n      const updatedStatus = {\r\n        ...prevStatus,\r\n        [job._id]: true, // Use job._id as the key for jobAppliedStatus\r\n      };\r\n\r\n      // Update the jobs state\r\n      setJobs((prevJobs) => {\r\n        const updatedJobs = [...prevJobs];\r\n        updatedJobs[jobIndex] = {\r\n          ...updatedJobs[jobIndex],\r\n          isApplied: true,\r\n        };\r\n        return updatedJobs;\r\n      });\r\n\r\n      return updatedStatus;\r\n    });\r\n    setSopDialogVisible(true);\r\n    setSopJobIndex(jobIndex);\r\n  }\r\n};\r\n\r\n  const handleApplySop = async () => {\r\n    try {\r\n      // Close the SOP dialog\r\n      setSopDialogVisible(false);\r\n\r\n      // Get the job index for which the user is applying\r\n      const jobIndex = sopJobIndex;\r\n      const token = sessionStorage.getItem(\"token\");\r\n\r\n      // Apply for the job\r\n      const response = await axios.post(\r\n        \"http://localhost:8001/jobs/apply\",\r\n        {\r\n          sopText: sopText,\r\n          jobId: jobs[jobIndex]._id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      // If the request was successful, update the applied status for the corresponding job\r\n      if (response.status === 200) {\r\n        const jobId = jobs[jobIndex]._id;\r\n        // Update the applied jobs list\r\n        setAppliedJobs((prevJobs) => [...prevJobs, jobs[jobIndex]]);\r\n\r\n        // Update the applied status for the corresponding job\r\n        setJobAppliedStatus((prevStatus) => {\r\n          const updatedStatus = { ...prevStatus, [jobId]: true };\r\n        \r\n          // Store the updated applied status in localStorage\r\n          localStorage.setItem(\"jobAppliedStatus\", JSON.stringify(updatedStatus));\r\n        \r\n          // Return the updated status to update the state\r\n          return updatedStatus;\r\n        });\r\n\r\n        // This will update the button text from \"Apply\" to \"Applied\"\r\n        setJobs((prevJobs) => {\r\n          const updatedJobs = [...prevJobs];\r\n          updatedJobs[jobIndex].isApplied = true;\r\n          return updatedJobs;\r\n        });\r\n        \r\n      } else {\r\n        console.error(\"Job application failed:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error applying for job:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      const token = sessionStorage.getItem(\"token\");\r\n\r\n      try {\r\n        // Fetch jobs\r\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          withCredentials: true,\r\n        });\r\n\r\n        const jobsData = response.data;\r\n\r\n        if (Array.isArray(jobsData.jobs)) {\r\n          setJobs(jobsData.jobs);\r\n\r\n          // Fetch profile data for each job's producer\r\n          const profileData = {};\r\n          for (const job of jobsData.jobs) {\r\n            const userId = job.userId;\r\n            const { data } = await axios.get(\r\n              `http://localhost:8001/profile/getproducerprofile/${userId}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                },\r\n              },\r\n              { withCredentials: true }\r\n            );\r\n\r\n            const { success, profile } = data;\r\n            if (success) {\r\n              profileData[userId] = profile;\r\n            } else {\r\n              console.error(\"Failed to fetch profile data:\", data);\r\n            }\r\n          }\r\n\r\n          setProfileData(profileData);\r\n        } else {\r\n          console.error(\"Invalid data received from the API:\", jobsData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  const handleApplyFilters = () => {\r\n    setFilterVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={styles.Jobs}>\r\n        {jobs.length > 0 ? (\r\n          <div>\r\n            <div className={styles.filterIconContainer}>\r\n              <IconButton\r\n                onClick={() => setFilterVisible(true)}\r\n                className={styles.filterIcon}\r\n              >\r\n                <FilterList />\r\n              </IconButton>\r\n            </div>\r\n            <div className={styles.cardsContainer}>\r\n              {jobs &&\r\n                jobs.map((job, index) => {\r\n                  const userId = job.userId;\r\n                  const isApplied = appliedJobs.some(\r\n                    (appliedJob) => appliedJob._id === job._id\r\n                  );\r\n                  const formattedLocation =\r\n                    job && job.location\r\n                      ? job.location.replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n                      : \"\";\r\n\r\n                  return (\r\n                    <div key={index} className={styles.jobCards}>\r\n                      <div className={styles.photoWrapper}>\r\n                        <img\r\n                          src={\r\n                            profileData &&\r\n                            profileData[userId] &&\r\n                            profileData[userId].profileImage\r\n                              ? `http://localhost:8001/${profileData[\r\n                                  userId\r\n                                ].profileImage.replace(/\\\\/g, \"/\")}`\r\n                              : \"\"\r\n                          }\r\n                          alt=\"Profile\"\r\n                        />\r\n                        <h3 className={styles.by}>\r\n                          {\" \"}\r\n                          -{profileData[userId] &&\r\n                            profileData[userId].username}{\" \"}\r\n                        </h3>\r\n                      </div>\r\n                      <div className={styles.jobSpecs}>\r\n                        <h3 className={styles.title}> {job.title}</h3>\r\n                        <h3>Available Positions :{job.positionsAvailable}</h3>\r\n                        <h3 className={styles.specs}>\r\n                          Skills Required:{\" \"}\r\n                          {job.skills.map((skill, index) => (\r\n                            <Chip\r\n                              key={index}\r\n                              label={skill}\r\n                              className={styles.chip}\r\n                            />\r\n                          ))}\r\n                        </h3>{\" \"}\r\n                        <h3>Job Type : {job.jobType}</h3>\r\n                        <h3>Duration : {job.duration}</h3>\r\n                        <h3>Salary : {job.salary}</h3>\r\n                        <h3>Location :{formattedLocation}</h3>\r\n                        <button\r\n                          className={`${styles.apply} ${\r\n                            isApplied ? styles.appliedButton : \"\"\r\n                          }`}\r\n                          onClick={() => handleApply(index)}\r\n                          disabled={job.isApplied}\r\n                        >\r\n                          {job.isApplied ? \"Applied\" : \"Apply\"}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            {/* Filter Popup */}\r\n            <Dialog\r\n              open={filterVisible}\r\n              onClose={() => setFilterVisible(false)}\r\n              className={styles.dialogContainer}\r\n            >\r\n              <div className={styles.filterContainer}>\r\n                <DialogTitle>Filter Options</DialogTitle>\r\n                <DialogContent className={styles.dialogContent}>\r\n                  <Typography variant=\"h6\">Location</Typography>\r\n                  <FormControl className={styles.formElement}>\r\n                    <InputLabel htmlFor=\"filterLocation\">\r\n                      Select Location Type\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"filterLocation-label\"\r\n                      id=\"filterLocation\"\r\n                      value={filterLocation || \"\"}\r\n                      onChange={(e) => setFilterLocation(e.target.value)}\r\n                      label=\"Select Location\"\r\n                    >\r\n                      <MenuItem value=\"\">All</MenuItem>\r\n                      <MenuItem value=\"onSite\">On Site</MenuItem>\r\n                      <MenuItem value=\"workFromHome\">Work From Home</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {/* Job Type Filter */}\r\n                  <Typography variant=\"h6\">Job Type</Typography>\r\n                  <FormControl className={styles.formElement}>\r\n                    <InputLabel htmlFor=\"filterJobType\">\r\n                      Select Job Type\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"filterJobType-label\"\r\n                      id=\"filterJobType\"\r\n                      value={filterJobType || \"\"}\r\n                      onChange={(e) => setFilterJobType(e.target.value)}\r\n                      label=\"Select Job Type\"\r\n                    >\r\n                      <MenuItem value=\"\">All</MenuItem>\r\n                      <MenuItem value=\"fullTime\">Full Time</MenuItem>\r\n                      <MenuItem value=\"partTime\">Part Time</MenuItem>\r\n                      <MenuItem value=\"contract\">Contract</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {/* Salary Filter */}\r\n                  <Typography variant=\"h6\">Salary</Typography>\r\n                  <div className={styles.sliderContainer}>\r\n                    <Slider\r\n                      value={filterSalary}\r\n                      onChange={(event, newValue) => setFilterSalary(newValue)}\r\n                      valueLabelDisplay=\"auto\"\r\n                      min={10000}\r\n                      max={100000}\r\n                      step={10000}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Duration Filter */}\r\n                  <Typography variant=\"h6\">Duration</Typography>\r\n                  <div className={styles.sliderContainer}>\r\n                    <Slider\r\n                      value={filterDuration}\r\n                      onChange={(event, newValue) =>\r\n                        setFilterDuration(newValue)\r\n                      }\r\n                      valueLabelDisplay=\"auto\"\r\n                      min={1}\r\n                      max={12}\r\n                      step={1}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Title Filter */}\r\n                  <Typography variant=\"h6\">Title</Typography>\r\n                  <div className={styles.formElement}>\r\n                    <TextField\r\n                      label=\"Select Title\"\r\n                      select\r\n                      value={filterTitle || \"\"}\r\n                      onChange={(e) => setFilterTitle(e.target.value)}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      <MenuItem value=\"\">All</MenuItem>\r\n                      <MenuItem value=\"Video Editor\">Video Editor</MenuItem>\r\n                      <MenuItem value=\"Graphic Designer\">Designer</MenuItem>\r\n                      <MenuItem value=\"Sound Engineer\">Sound Engineer</MenuItem>\r\n                      {/* Add more titles as needed */}\r\n                    </TextField>\r\n                  </div>\r\n\r\n                  {/* Add other filters as needed */}\r\n                </DialogContent>\r\n              </div>\r\n\r\n              <div className={styles.applyButtonContainer}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleApplyFilters}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </div>\r\n            </Dialog>\r\n            {/* SOP Dialog */}\r\n            <Dialog\r\n              open={sopDialogVisible}\r\n              onClose={() => setSopDialogVisible(false)}\r\n              className={styles.dialogContainer}\r\n            >\r\n              <div className={styles.filterContainer}>\r\n                <DialogTitle>Write Your Statement of Purpose (SOP)</DialogTitle>\r\n                <DialogContent className={styles.dialogContent}>\r\n                  <TextField\r\n                    label=\"SOP\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={sopText}\r\n                    onChange={(e) => setSopText(e.target.value)}\r\n                  />\r\n                </DialogContent>\r\n              </div>\r\n\r\n              <div className={styles.applyButtonContainer}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={styles.sop}\r\n                  onClick={handleApplySop}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </div>\r\n            </Dialog>\r\n          </div>\r\n        ) : (\r\n          <img src={noData} className={styles.noData}/>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}