{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createFilterOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _useAutocomplete2.createFilterOptions;\n  }\n});\nexports.default = exports.styles = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _styles = require(\"@material-ui/core/styles\");\nvar _Popper = _interopRequireDefault(require(\"@material-ui/core/Popper\"));\nvar _ListSubheader = _interopRequireDefault(require(\"@material-ui/core/ListSubheader\"));\nvar _Paper = _interopRequireDefault(require(\"@material-ui/core/Paper\"));\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\nvar _Chip = _interopRequireDefault(require(\"@material-ui/core/Chip\"));\nvar _Close = _interopRequireDefault(require(\"../internal/svg-icons/Close\"));\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\nvar _useAutocomplete2 = _interopRequireWildcard(require(\"../useAutocomplete\"));\nvar styles = function styles(theme) {\n  var _option;\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n    },\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n    /* Styles applied to the `Paper` component. */\n    paper: (0, _extends2.default)({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, (0, _defineProperty2.default)(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), (0, _defineProperty2.default)(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), (0, _defineProperty2.default)(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\nexports.styles = styles;\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n    open = props.open,\n    other = (0, _objectWithoutProperties2.default)(props, [\"anchorEl\", \"open\"]);\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\nvar _ref = /*#__PURE__*/React.createElement(_Close.default, {\n  fontSize: \"small\"\n});\nvar _ref2 = /*#__PURE__*/React.createElement(_ArrowDropDown.default, null);\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n    autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n    _props$autoHighlight = props.autoHighlight,\n    autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n    _props$autoSelect = props.autoSelect,\n    autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n    _props$blurOnSelect = props.blurOnSelect,\n    blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n    ChipProps = props.ChipProps,\n    classes = props.classes,\n    className = props.className,\n    _props$clearOnBlur = props.clearOnBlur,\n    clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n    _props$clearOnEscape = props.clearOnEscape,\n    clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n    _props$clearText = props.clearText,\n    clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n    _props$closeIcon = props.closeIcon,\n    closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n    _props$closeText = props.closeText,\n    closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n    _props$debug = props.debug,\n    debug = _props$debug === void 0 ? false : _props$debug,\n    _props$defaultValue = props.defaultValue,\n    defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n    _props$disableClearab = props.disableClearable,\n    disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n    _props$disableCloseOn = props.disableCloseOnSelect,\n    disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$disabledItemsF = props.disabledItemsFocusable,\n    disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n    _props$disableListWra = props.disableListWrap,\n    disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    filterOptions = props.filterOptions,\n    _props$filterSelected = props.filterSelectedOptions,\n    filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n    _props$forcePopupIcon = props.forcePopupIcon,\n    forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n    _props$freeSolo = props.freeSolo,\n    freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n    _props$fullWidth = props.fullWidth,\n    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n    _props$getLimitTagsTe = props.getLimitTagsText,\n    getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n      return \"+\".concat(more);\n    } : _props$getLimitTagsTe,\n    getOptionDisabled = props.getOptionDisabled,\n    _props$getOptionLabel = props.getOptionLabel,\n    getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n      return x;\n    } : _props$getOptionLabel,\n    getOptionSelected = props.getOptionSelected,\n    groupBy = props.groupBy,\n    _props$handleHomeEndK = props.handleHomeEndKeys,\n    handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n    idProp = props.id,\n    _props$includeInputIn = props.includeInputInList,\n    includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n    inputValueProp = props.inputValue,\n    _props$limitTags = props.limitTags,\n    limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n    _props$ListboxCompone = props.ListboxComponent,\n    ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n    ListboxProps = props.ListboxProps,\n    _props$loading = props.loading,\n    loading = _props$loading === void 0 ? false : _props$loading,\n    _props$loadingText = props.loadingText,\n    loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    _props$noOptionsText = props.noOptionsText,\n    noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n    onChange = props.onChange,\n    onClose = props.onClose,\n    onHighlightChange = props.onHighlightChange,\n    onInputChange = props.onInputChange,\n    onOpen = props.onOpen,\n    open = props.open,\n    _props$openOnFocus = props.openOnFocus,\n    openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n    _props$openText = props.openText,\n    openText = _props$openText === void 0 ? 'Open' : _props$openText,\n    options = props.options,\n    _props$PaperComponent = props.PaperComponent,\n    PaperComponent = _props$PaperComponent === void 0 ? _Paper.default : _props$PaperComponent,\n    _props$PopperComponen = props.PopperComponent,\n    PopperComponentProp = _props$PopperComponen === void 0 ? _Popper.default : _props$PopperComponen,\n    _props$popupIcon = props.popupIcon,\n    popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n    renderGroupProp = props.renderGroup,\n    renderInput = props.renderInput,\n    renderOptionProp = props.renderOption,\n    renderTags = props.renderTags,\n    _props$selectOnFocus = props.selectOnFocus,\n    selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'medium' : _props$size,\n    valueProp = props.value,\n    other = (0, _objectWithoutProperties2.default)(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n  var _useAutocomplete = (0, _useAutocomplete2.default)((0, _extends2.default)({}, props, {\n      componentName: 'Autocomplete'\n    })),\n    getRootProps = _useAutocomplete.getRootProps,\n    getInputProps = _useAutocomplete.getInputProps,\n    getInputLabelProps = _useAutocomplete.getInputLabelProps,\n    getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n    getClearProps = _useAutocomplete.getClearProps,\n    getTagProps = _useAutocomplete.getTagProps,\n    getListboxProps = _useAutocomplete.getListboxProps,\n    getOptionProps = _useAutocomplete.getOptionProps,\n    value = _useAutocomplete.value,\n    dirty = _useAutocomplete.dirty,\n    id = _useAutocomplete.id,\n    popupOpen = _useAutocomplete.popupOpen,\n    focused = _useAutocomplete.focused,\n    focusedTag = _useAutocomplete.focusedTag,\n    anchorEl = _useAutocomplete.anchorEl,\n    setAnchorEl = _useAutocomplete.setAnchorEl,\n    inputValue = _useAutocomplete.inputValue,\n    groupedOptions = _useAutocomplete.groupedOptions;\n  var startAdornment;\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return (0, _extends2.default)({\n        className: (0, _clsx.default)(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(_Chip.default, (0, _extends2.default)({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(_ListSubheader.default, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", (0, _extends2.default)({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", (0, _extends2.default)({\n    ref: ref,\n    className: (0, _clsx.default)(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: (0, _clsx.default)(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: (0, _clsx.default)(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: (0, _extends2.default)({\n      className: (0, _clsx.default)(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: (0, _clsx.default)(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, (0, _extends2.default)({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: _propTypes.default.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: _propTypes.default.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: _propTypes.default.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: _propTypes.default.oneOfType([_propTypes.default.oneOf(['mouse', 'touch']), _propTypes.default.bool]),\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: _propTypes.default.object,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: _propTypes.default.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: _propTypes.default.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: _propTypes.default.string,\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: _propTypes.default.node,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: _propTypes.default.string,\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: _propTypes.default.bool,\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: _propTypes.default.any,\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: _propTypes.default\n  /* @typescript-to-proptypes-ignore */.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: _propTypes.default.bool,\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: _propTypes.default.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: _propTypes.default.bool,\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: _propTypes.default.bool,\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: _propTypes.default.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: _propTypes.default.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: _propTypes.default.oneOfType([_propTypes.default.oneOf(['auto']), _propTypes.default.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: _propTypes.default\n  /* @typescript-to-proptypes-ignore */.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: _propTypes.default.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: _propTypes.default.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: _propTypes.default.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: _propTypes.default.func,\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: _propTypes.default.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: _propTypes.default.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: _propTypes.default.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: _propTypes.default.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: _propTypes.default.bool,\n  /**\n   * The input value.\n   */\n  inputValue: _propTypes.default.string,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: _propTypes.default.number,\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: _propTypes.default.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: _propTypes.default.object,\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: _propTypes.default.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: _propTypes.default.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: _propTypes.default\n  /* @typescript-to-proptypes-ignore */.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: _propTypes.default.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: _propTypes.default.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: _propTypes.default.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: _propTypes.default.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: _propTypes.default.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func,\n  /**\n   * Control the popup` open state.\n   */\n  open: _propTypes.default.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: _propTypes.default.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: _propTypes.default.string,\n  /**\n   * Array of options.\n   */\n  options: _propTypes.default.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: _propTypes.default.elementType,\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: _propTypes.default.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: _propTypes.default.node,\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: _propTypes.default.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: _propTypes.default.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: _propTypes.default.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: _propTypes.default.func,\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: _propTypes.default.bool,\n  /**\n   * The size of the autocomplete.\n   */\n  size: _propTypes.default.oneOf(['medium', 'small']),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: _propTypes.default.any\n} : void 0;\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_useAutocomplete2","createFilterOptions","default","styles","_objectWithoutProperties2","_defineProperty2","_extends2","React","_propTypes","_clsx","_styles","_Popper","_ListSubheader","_Paper","_IconButton","_Chip","_Close","_ArrowDropDown","theme","_option","root","visibility","fullWidth","width","focused","tag","margin","maxWidth","tagSizeSmall","hasPopupIcon","hasClearIcon","inputRoot","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","input","flexGrow","textOverflow","opacity","inputFocused","endAdornment","position","top","clearIndicator","marginRight","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","transform","popper","zIndex","modal","popperDisablePortal","paper","typography","body1","overflow","listbox","listStyle","maxHeight","loading","color","palette","text","secondary","noOptions","option","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","selected","hover","disabledOpacity","pointerEvents","groupLabel","background","groupUl","DisablePortal","props","anchorEl","open","other","createElement","_ref","fontSize","_ref2","Autocomplete","forwardRef","ref","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","ChipProps","classes","className","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabled","disabled","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$disablePortal","disablePortal","filterOptions","_props$filterSelected","filterSelectedOptions","_props$forcePopupIcon","forcePopupIcon","_props$freeSolo","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","concat","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","inputValue","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$multiple","_props$noOptionsText","noOptionsText","onChange","onClose","onHighlightChange","onInputChange","onOpen","_props$openOnFocus","openOnFocus","_props$openText","openText","options","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","PopperComponentProp","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$selectOnFocus","selectOnFocus","_props$size","size","valueProp","_useAutocomplete","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","dirty","popupOpen","focusedTag","setAnchorEl","groupedOptions","startAdornment","length","getCustomizedTagProps","params","map","index","label","Array","isArray","splice","push","key","defaultRenderGroup","component","group","children","renderListOption","optionProps","Fragment","undefined","InputLabelProps","InputProps","title","inputProps","style","clientWidth","role","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","any","func","number","elementType","array","isRequired","_default","withStyles","name"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/node_modules/@material-ui/lab/Autocomplete/Autocomplete.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createFilterOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _useAutocomplete2.createFilterOptions;\n  }\n});\nexports.default = exports.styles = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _Popper = _interopRequireDefault(require(\"@material-ui/core/Popper\"));\n\nvar _ListSubheader = _interopRequireDefault(require(\"@material-ui/core/ListSubheader\"));\n\nvar _Paper = _interopRequireDefault(require(\"@material-ui/core/Paper\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Chip = _interopRequireDefault(require(\"@material-ui/core/Chip\"));\n\nvar _Close = _interopRequireDefault(require(\"../internal/svg-icons/Close\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _useAutocomplete2 = _interopRequireWildcard(require(\"../useAutocomplete\"));\n\nvar styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: (0, _extends2.default)({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, (0, _defineProperty2.default)(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), (0, _defineProperty2.default)(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), (0, _defineProperty2.default)(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = (0, _objectWithoutProperties2.default)(props, [\"anchorEl\", \"open\"]);\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(_Close.default, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(_ArrowDropDown.default, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? _Paper.default : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? _Popper.default : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = (0, _useAutocomplete2.default)((0, _extends2.default)({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return (0, _extends2.default)({\n        className: (0, _clsx.default)(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(_Chip.default, (0, _extends2.default)({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(_ListSubheader.default, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", (0, _extends2.default)({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", (0, _extends2.default)({\n    ref: ref,\n    className: (0, _clsx.default)(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: (0, _clsx.default)(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: (0, _clsx.default)(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: (0, _extends2.default)({\n      className: (0, _clsx.default)(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: (0, _clsx.default)(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, (0, _extends2.default)({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: _propTypes.default.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: _propTypes.default.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: _propTypes.default.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: _propTypes.default.oneOfType([_propTypes.default.oneOf(['mouse', 'touch']), _propTypes.default.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: _propTypes.default.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: _propTypes.default.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: _propTypes.default.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: _propTypes.default.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: _propTypes.default.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: _propTypes.default.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: _propTypes.default.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: _propTypes.default.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: _propTypes.default.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: _propTypes.default.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: _propTypes.default.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: _propTypes.default.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: _propTypes.default.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: _propTypes.default.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: _propTypes.default.oneOfType([_propTypes.default.oneOf(['auto']), _propTypes.default.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: _propTypes.default.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: _propTypes.default.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: _propTypes.default.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: _propTypes.default.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: _propTypes.default.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: _propTypes.default.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: _propTypes.default.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: _propTypes.default.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: _propTypes.default.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: _propTypes.default.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: _propTypes.default.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: _propTypes.default.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: _propTypes.default.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: _propTypes.default.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: _propTypes.default.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: _propTypes.default.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: _propTypes.default.string,\n\n  /**\n   * Array of options.\n   */\n  options: _propTypes.default.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: _propTypes.default.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: _propTypes.default.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: _propTypes.default.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: _propTypes.default.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: _propTypes.default.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: _propTypes.default.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: _propTypes.default.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: _propTypes.default.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: _propTypes.default.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}