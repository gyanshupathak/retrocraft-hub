{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gyanshu\\\\webd\\\\projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\applicants\\\\ViewApplicants.js\",\n  _s = $RefreshSig$();\n// ViewApplicants.js\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NavbarProducer from '../../components/navbar/NavbarProducer';\nimport styles from './ViewApplicants.module.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchApplicants = async (jobId, setApplicants, setError) => {\n  try {\n    const response = await axios.get(`http://localhost:8001/jobs/applied?jobId=${jobId}`, {\n      withCredentials: true\n    });\n    const {\n      success,\n      data,\n      message\n    } = response.data;\n    if (success) {\n      setApplicants(data);\n    } else {\n      setError(message);\n    }\n  } catch (error) {\n    console.error('Error fetching applicants:', error);\n    setError('An error occurred while fetching applicants.');\n  }\n};\nconst ViewApplicants = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const [applicants, setApplicants] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState({});\n  useEffect(() => {\n    fetchApplicants(jobId, setApplicants, setError);\n  }, [jobId]);\n  const handleAccept = async applicantId => {\n    try {\n      const response = await axios.post(`http://localhost:8001/jobs/acceptapplicant/${applicantId}`, {\n        jobId\n      }, {\n        withCredentials: true\n      });\n      const {\n        success,\n        message\n      } = response.data;\n      if (success) {\n        setStatus({\n          ...status,\n          [applicantId]: 'Accepted'\n        });\n        fetchApplicants();\n        console.log(message);\n      } else {\n        console.error(message);\n      }\n    } catch (error) {\n      console.error('Error accepting applicant:', error);\n    }\n  };\n\n  // const handleReject = async (applicantId) => {\n  //   // Implement the logic to reject the applicant with the given ID\n  //   try {\n  //     const response = await axios.post(`http://localhost:8001/jobs/rejectapplicant/${applicantId}`, {\n  //       withCredentials: true,\n  //     });\n\n  //     const { success, message } = response.data;\n\n  //     if (success) {\n  //       // Refresh the list of applicants after rejecting\n  //       fetchApplicants();\n  //       console.log(message);\n  //     } else {\n  //       console.error(message);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error rejecting applicant:', error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.viewApplicantsContainer,\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.applicantsContainer,\n        children: applicants && applicants.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Applicants for Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }, this), applicants.map(applicant => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: applicant.sopText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAccept(applicant._id),\n              disabled: status[applicant._id] // Add this line\n              ,\n              children: status[applicant._id] === 'Accepted' ? 'Accepted' : 'Accept'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStatus({\n                ...status,\n                [applicant._id]: 'Rejected'\n              }),\n              disabled: status[applicant._id] // Add this line\n              ,\n              children: status[applicant._id] === 'Rejected' ? 'Rejected' : 'Reject'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, applicant._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No applicants found for this job.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ViewApplicants, \"XHgvJnOldOivl/2RffAMPou6KHc=\", false, function () {\n  return [useParams];\n});\n_c = ViewApplicants;\nexport default ViewApplicants;\nvar _c;\n$RefreshReg$(_c, \"ViewApplicants\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavbarProducer","styles","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchApplicants","jobId","setApplicants","setError","response","get","withCredentials","success","data","message","error","console","ViewApplicants","_s","applicants","status","setStatus","handleAccept","applicantId","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","viewApplicantsContainer","errorMessage","applicantsContainer","length","map","applicant","sopText","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/src/pages/applicants/ViewApplicants.js"],"sourcesContent":["// ViewApplicants.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport NavbarProducer from '../../components/navbar/NavbarProducer';\r\nimport styles from './ViewApplicants.module.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst fetchApplicants = async (jobId, setApplicants, setError) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:8001/jobs/applied?jobId=${jobId}`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    const { success, data, message } = response.data;\r\n\r\n    if (success) {\r\n      setApplicants(data);\r\n    } else {\r\n      setError(message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching applicants:', error);\r\n    setError('An error occurred while fetching applicants.');\r\n  }\r\n};\r\n\r\n\r\nconst ViewApplicants = () => {\r\n  const { jobId } = useParams();\r\n  const [applicants, setApplicants] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState({});\r\n\r\n    \r\n\r\n  useEffect(() => {\r\n    fetchApplicants(jobId, setApplicants, setError);\r\n  }, [jobId]);\r\n\r\n  const handleAccept = async (applicantId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:8001/jobs/acceptapplicant/${applicantId}`, {\r\n        jobId,\r\n    },{\r\n        withCredentials: true,\r\n      });\r\n  \r\n      const { success, message } = response.data;\r\n  \r\n      if (success) {\r\n        setStatus({ ...status, [applicantId]: 'Accepted' });\r\n        fetchApplicants();\r\n        console.log(message);\r\n      } else {\r\n        console.error(message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accepting applicant:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // const handleReject = async (applicantId) => {\r\n  //   // Implement the logic to reject the applicant with the given ID\r\n  //   try {\r\n  //     const response = await axios.post(`http://localhost:8001/jobs/rejectapplicant/${applicantId}`, {\r\n  //       withCredentials: true,\r\n  //     });\r\n\r\n  //     const { success, message } = response.data;\r\n\r\n  //     if (success) {\r\n  //       // Refresh the list of applicants after rejecting\r\n  //       fetchApplicants();\r\n  //       console.log(message);\r\n  //     } else {\r\n  //       console.error(message);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error rejecting applicant:', error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <NavbarProducer />\r\n      <div className={styles.viewApplicantsContainer}>\r\n        {error ? (\r\n          <p className={styles.errorMessage}>{error}</p>\r\n        ) : (\r\n          <div className={styles.applicantsContainer}>\r\n            {applicants && applicants.length > 0 ? (\r\n              <ul>\r\n                 <h2>Applicants for Job</h2>\r\n                {applicants.map((applicant) => (\r\n                  <li key={applicant._id}>\r\n                    <p>{applicant.sopText}</p>\r\n                    <button \r\n                        onClick={() => handleAccept(applicant._id)}\r\n                        disabled={status[applicant._id]} // Add this line\r\n                      >\r\n                        {status[applicant._id] === 'Accepted' ? 'Accepted' : 'Accept'}\r\n                      </button>\r\n                    <button \r\n                      onClick={() => setStatus({ ...status, [applicant._id]: 'Rejected' })}\r\n                      disabled={status[applicant._id]} // Add this line\r\n                    >\r\n                      {status[applicant._id] === 'Rejected' ? 'Rejected' : 'Reject'}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No applicants found for this job.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewApplicants;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}