{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gyanshu\\\\webd\\\\projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\jobs\\\\Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/navbar/NavbarFreelancer';\nimport styles from './Jobs.module.css';\nimport { FilterList } from \"@mui/icons-material\";\nimport { Button, Dialog, DialogTitle, IconButton, DialogContent, Slider } from \"@mui/material\";\nimport { FormControl, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [appliedJobs, setAppliedJobs] = useState([]);\n  const [filterLocation, setFilterLocation] = useState(null);\n  const [filterJobType, setFilterJobType] = useState(null);\n  const [filterDuration, setFilterDuration] = useState([1, 12]);\n  const [filterSalary, setFilterSalary] = useState([10000, 100000]);\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [filterTitle, setFilterTitle] = useState(\"\");\n  const [sopText, setSopText] = useState(\"\"); // New state for SOP text\n  const [sopDialogVisible, setSopDialogVisible] = useState(false); // State to control SOP dialog visibility\n  const [jobAppliedStatus, setJobAppliedStatus] = useState(() => {\n    // Initialize jobAppliedStatus from localStorage or default to an empty object\n    const storedStatus = localStorage.getItem('jobAppliedStatus');\n    return storedStatus ? JSON.parse(storedStatus) : {};\n  });\n  const [sopJobIndex, setSopJobIndex] = useState(null);\n\n  // Fetch applied jobs when component mounts\n  useEffect(() => {\n    const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\n    const token = tokenCookie ? tokenCookie.split('=')[1] : null;\n    const userId = localStorage.getItem('_id');\n    const fetchAppliedJobs = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8001/jobs/appliedJobsForUser/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        if (Array.isArray(response.data.data)) {\n          setAppliedJobs(response.data.data);\n        } else {\n          console.error('Invalid data received from the API:', response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching applied jobs:\", error);\n      }\n    };\n    fetchAppliedJobs();\n  }, []);\n\n  // Fetch jobs from the database when the component mounts\n  useEffect(() => {\n    const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\n    const token = tokenCookie ? tokenCookie.split('=')[1] : null;\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\n          params: {\n            jobType: filterJobType,\n            duration: filterDuration,\n            salary: filterSalary,\n            title: filterTitle,\n            location: filterLocation\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        const jobsData = response.data;\n        if (Array.isArray(jobsData.jobs)) {\n          setJobs(jobsData.jobs);\n          localStorage.setItem('jobs', JSON.stringify(jobsData.jobs));\n        } else {\n          console.error('Invalid data received from the API:', jobsData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, [filterDuration, filterJobType, filterLocation, filterSalary, filterTitle]);\n  const handleApply = async jobIndex => {\n    // Check if the job is in the applied jobs list\n    const job = jobs[jobIndex];\n    const isApplied = appliedJobs.some(appliedJob => appliedJob._id === job._id);\n\n    // Update the applied status for the corresponding job\n    setJobAppliedStatus(prevStatus => ({\n      ...prevStatus,\n      [jobIndex]: isApplied\n    }));\n\n    // If the job is not already applied for, open the SOP dialog\n    if (!isApplied) {\n      setSopDialogVisible(true);\n      setSopJobIndex(jobIndex);\n    }\n\n    // Open the SOP dialog\n    setSopDialogVisible(true);\n    setSopJobIndex(jobIndex);\n  };\n  const handleApplySop = async () => {\n    // Close the SOP dialog\n    setSopDialogVisible(false);\n\n    // Get the job index for which the user is applying\n    const jobIndex = sopJobIndex;\n\n    // Update the applied jobs list\n    setAppliedJobs(prevJobs => [...prevJobs, jobs[jobIndex]]);\n\n    // Update the applied status for the corresponding job\n    setJobAppliedStatus(prevStatus => ({\n      ...prevStatus,\n      [jobIndex]: true\n    }));\n    // Store the updated applied status in localStorage\n    localStorage.setItem('jobAppliedStatus', JSON.stringify({\n      ...jobAppliedStatus,\n      [jobIndex]: true\n    }));\n\n    // Pass the SOP text and job index to the dashboardproducer page\n    localStorage.setItem(\"sopText\", sopText);\n    localStorage.setItem(\"appliedJobIndex\", jobIndex);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post(\"http://localhost:8001/jobs/apply\", {\n        sopText: sopText,\n        jobId: jobs[jobIndex]._id // Assuming each job has a unique _id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        console.log(\"Job application successful\");\n      } else {\n        console.error(\"Job application failed:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error applying for job:\", error);\n    }\n  };\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\n          withCredentials: true,\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const jobsData = response.data;\n        if (Array.isArray(jobsData.jobs)) {\n          setJobs(jobsData.jobs);\n        } else {\n          console.error('Invalid data received from the API:', jobsData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleApplyFilters = () => {\n    setFilterVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterIconContainer,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setFilterVisible(true),\n        className: styles.filterIcon,\n        children: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: jobs && jobs.map((job, index) => {\n        const isApplied = appliedJobs.some(appliedJob => appliedJob._id === job._id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cards,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.title,\n            children: [\" \", job.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Available Positions: \", job.positionsAvailable]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Skills Required: \", job.skills]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Job Type: \", job.jobType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Duration: \", job.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Salary: \", job.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Location:\", job.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.apply} ${isApplied ? styles.appliedButton : ''}`,\n            onClick: () => handleApply(index),\n            disabled: isApplied // Disable the button if the user has already applied\n            ,\n            children: isApplied ? \"Applied\" : \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 5\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: filterVisible,\n      onClose: () => setFilterVisible(false),\n      className: styles.dialogContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filterContainer,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Filter Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: styles.dialogContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formElement,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"filterLocation\",\n              children: \"Select Location Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"filterLocation-label\",\n              id: \"filterLocation\",\n              value: filterLocation || \"\",\n              onChange: e => setFilterLocation(e.target.value),\n              label: \"Select Location\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"onSite\",\n                children: \"On Site\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"workFromHome\",\n                children: \"Work From Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Job Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formElement,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"filterJobType\",\n              children: \"Select Job Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"filterJobType-label\",\n              id: \"filterJobType\",\n              value: filterJobType || \"\",\n              onChange: e => setFilterJobType(e.target.value),\n              label: \"Select Job Type\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"fullTime\",\n                children: \"Full Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"partTime\",\n                children: \"Part Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"contract\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sliderContainer,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: filterSalary,\n              onChange: (event, newValue) => setFilterSalary(newValue),\n              valueLabelDisplay: \"auto\",\n              min: 10000,\n              max: 100000,\n              step: 10000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sliderContainer,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: filterDuration,\n              onChange: (event, newValue) => setFilterDuration(newValue),\n              valueLabelDisplay: \"auto\",\n              min: 1,\n              max: 12,\n              step: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formElement,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Select Title\",\n              select: true,\n              value: filterTitle || \"\",\n              onChange: e => setFilterTitle(e.target.value),\n              variant: \"outlined\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Video Editor\",\n                children: \"Video Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Graphic Designer\",\n                children: \"Designer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sound Engineer\",\n                children: \"Sound Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.applyButtonContainer,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleApplyFilters,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: sopDialogVisible,\n      onClose: () => setSopDialogVisible(false),\n      className: styles.dialogContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filterContainer,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Write Your Statement of Purpose (SOP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: styles.dialogContent,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SOP\",\n            multiline: true,\n            rows: 4,\n            variant: \"outlined\",\n            fullWidth: true,\n            value: sopText,\n            onChange: e => setSopText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.applyButtonContainer,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleApplySop,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Jobs, \"LJwlzRBPnD3wn+C9RNXOqIh5fqg=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","styles","FilterList","Button","Dialog","DialogTitle","IconButton","DialogContent","Slider","FormControl","InputLabel","MenuItem","Select","TextField","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","jobs","setJobs","appliedJobs","setAppliedJobs","filterLocation","setFilterLocation","filterJobType","setFilterJobType","filterDuration","setFilterDuration","filterSalary","setFilterSalary","filterVisible","setFilterVisible","filterTitle","setFilterTitle","sopText","setSopText","sopDialogVisible","setSopDialogVisible","jobAppliedStatus","setJobAppliedStatus","storedStatus","localStorage","getItem","JSON","parse","sopJobIndex","setSopJobIndex","tokenCookie","document","cookie","split","find","row","startsWith","token","userId","fetchAppliedJobs","response","get","headers","Authorization","withCredentials","Array","isArray","data","console","error","fetchJobs","params","jobType","duration","salary","title","location","jobsData","setItem","stringify","handleApply","jobIndex","job","isApplied","some","appliedJob","_id","prevStatus","handleApplySop","prevJobs","post","jobId","status","log","handleApplyFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filterIconContainer","onClick","filterIcon","cardsContainer","map","index","cards","positionsAvailable","skills","apply","appliedButton","disabled","open","onClose","dialogContainer","filterContainer","dialogContent","variant","formElement","htmlFor","labelId","id","value","onChange","e","target","label","sliderContainer","event","newValue","valueLabelDisplay","min","max","step","select","fullWidth","applyButtonContainer","color","multiline","rows","_c","$RefreshReg$"],"sources":["D:/Gyanshu/webd/projects/retrocraft-hub/frontend/src/pages/jobs/Jobs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../../components/navbar/NavbarFreelancer';\r\nimport styles from './Jobs.module.css';\r\nimport { FilterList } from \"@mui/icons-material\";\r\nimport { Button, Dialog, DialogTitle,IconButton, DialogContent, Slider } from \"@mui/material\";\r\nimport { FormControl, InputLabel, MenuItem, Select, TextField,  Typography } from '@mui/material';\r\n\r\n\r\n\r\nconst Jobs = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [appliedJobs, setAppliedJobs] = useState([]);\r\n  const [filterLocation, setFilterLocation] = useState(null);\r\n  const [filterJobType, setFilterJobType] = useState(null);\r\n  const [filterDuration, setFilterDuration] = useState([1, 12]);\r\n  const [filterSalary, setFilterSalary] = useState([10000, 100000]);\r\n  const [filterVisible, setFilterVisible] = useState(false);\r\n  const [filterTitle, setFilterTitle] = useState(\"\"); \r\n  const [sopText, setSopText] = useState(\"\"); // New state for SOP text\r\n  const [sopDialogVisible, setSopDialogVisible] = useState(false); // State to control SOP dialog visibility\r\n  const [jobAppliedStatus, setJobAppliedStatus] = useState(() =>{\r\n      // Initialize jobAppliedStatus from localStorage or default to an empty object\r\n      const storedStatus = localStorage.getItem('jobAppliedStatus');\r\n      return storedStatus ? JSON.parse(storedStatus) : {};\r\n  }); \r\n  const [sopJobIndex, setSopJobIndex] = useState(null);\r\n\r\n\r\n// Fetch applied jobs when component mounts\r\nuseEffect(() => {\r\n  const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\r\n  const token = tokenCookie ? tokenCookie.split('=')[1] : null;\r\n  const userId = localStorage.getItem('_id');\r\n\r\n  const fetchAppliedJobs = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8001/jobs/appliedJobsForUser/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (Array.isArray(response.data.data)) {\r\n        setAppliedJobs(response.data.data);\r\n      } else {\r\n        console.error('Invalid data received from the API:', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching applied jobs:\", error);\r\n    }\r\n  };\r\n\r\n  fetchAppliedJobs();\r\n}, []);\r\n  \r\n  // Fetch jobs from the database when the component mounts\r\n  useEffect(() => {\r\n    const tokenCookie = document.cookie.split('; ').find(row => row.startsWith('token'));\r\n    const token = tokenCookie ? tokenCookie.split('=')[1] : null;\r\n    \r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\r\n\r\n        params: {\r\n          jobType: filterJobType,\r\n          duration: filterDuration,\r\n          salary: filterSalary,\r\n          title: filterTitle,\r\n          location: filterLocation,\r\n\r\n        },\r\n\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          },\r\n          withCredentials: true\r\n        });\r\n  \r\n        const jobsData = response.data;\r\n  \r\n        if (Array.isArray(jobsData.jobs)) {\r\n          setJobs(jobsData.jobs);\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData.jobs));\r\n        } else {\r\n          console.error('Invalid data received from the API:', jobsData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchJobs();\r\n  }, [filterDuration, filterJobType, filterLocation, filterSalary, filterTitle]);\r\n  \r\n  \r\n  \r\n \r\n\r\n\r\n\r\n  const handleApply = async (jobIndex) => {\r\n\r\n    // Check if the job is in the applied jobs list\r\n    const job = jobs[jobIndex];\r\n    const isApplied = appliedJobs.some(appliedJob => appliedJob._id === job._id);\r\n\r\n\r\n    // Update the applied status for the corresponding job\r\n  setJobAppliedStatus((prevStatus) => ({\r\n    ...prevStatus,\r\n    [jobIndex]: isApplied,\r\n  }));\r\n\r\n  // If the job is not already applied for, open the SOP dialog\r\n  if (!isApplied) {\r\n    setSopDialogVisible(true);\r\n    setSopJobIndex(jobIndex);\r\n  }\r\n\r\n\r\n    // Open the SOP dialog\r\n    setSopDialogVisible(true);\r\n\r\n    setSopJobIndex(jobIndex);\r\n  };\r\n\r\n  const handleApplySop = async() => {\r\n    // Close the SOP dialog\r\n    setSopDialogVisible(false);\r\n\r\n\r\n    // Get the job index for which the user is applying\r\n    const jobIndex = sopJobIndex;\r\n\r\n\r\n    // Update the applied jobs list\r\n    setAppliedJobs(prevJobs => [...prevJobs, jobs[jobIndex]]);\r\n\r\n\r\n    // Update the applied status for the corresponding job\r\n    setJobAppliedStatus((prevStatus) => ({\r\n      ...prevStatus,\r\n      [jobIndex]: true,\r\n    }));\r\n    // Store the updated applied status in localStorage\r\n    localStorage.setItem('jobAppliedStatus', JSON.stringify({\r\n      ...jobAppliedStatus,\r\n      [jobIndex]: true,\r\n    }));\r\n\r\n    // Pass the SOP text and job index to the dashboardproducer page\r\n    localStorage.setItem(\"sopText\", sopText);\r\n    localStorage.setItem(\"appliedJobIndex\", jobIndex);\r\n\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8001/jobs/apply\", {\r\n        sopText: sopText,\r\n        jobId: jobs[jobIndex]._id, // Assuming each job has a unique _id\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        withCredentials: true\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        console.log(\"Job application successful\");\r\n      } else {\r\n        console.error(\"Job application failed:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error applying for job:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8001/jobs/getjobs\", {\r\n          withCredentials: true,\r\n          headers: {\r\n    Authorization: `Bearer ${token}`\r\n  }\r\n        });\r\n        \r\n\r\n        const jobsData = response.data;\r\n\r\n        if (Array.isArray(jobsData.jobs)) {\r\n          setJobs(jobsData.jobs);\r\n        } else {\r\n          console.error('Invalid data received from the API:', jobsData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleApplyFilters = () => {\r\n    setFilterVisible(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className={styles.filterIconContainer}>\r\n        <IconButton onClick={() => setFilterVisible(true)} className={styles.filterIcon}>\r\n          <FilterList />\r\n        </IconButton>\r\n      </div>\r\n    <div className={styles.cardsContainer}>\r\n    {jobs && jobs.map((job, index) => {\r\n  const isApplied = appliedJobs.some(appliedJob => appliedJob._id === job._id);\r\n  return (\r\n    <div key={index} className={styles.cards}>\r\n      <h3 className={styles.title}> {job.title}</h3>\r\n      <h3>Available Positions: {job.positionsAvailable}</h3>\r\n      <h3>Skills Required: {job.skills}</h3>\r\n      <h3>Job Type: {job.jobType}</h3>\r\n      <h3>Duration: {job.duration}</h3>\r\n      <h3>Salary: {job.salary}</h3>\r\n      <h3>Location:{job.location}</h3>\r\n\r\n      <button\r\n        className={`${styles.apply} ${isApplied ? styles.appliedButton : ''}`}\r\n        onClick={() => handleApply(index)}\r\n        disabled={isApplied} // Disable the button if the user has already applied\r\n      >\r\n        {isApplied ? \"Applied\" : \"Apply\"}\r\n      </button>       \r\n    </div>\r\n  );\r\n})}\r\n      </div>\r\n\r\n      {/* Filter Popup */}\r\n      <Dialog open={filterVisible} onClose={() => setFilterVisible(false)} className={styles.dialogContainer}>\r\n        <div className={styles.filterContainer}>\r\n        <DialogTitle>Filter Options</DialogTitle>\r\n        <DialogContent className={styles.dialogContent}>\r\n\r\n        <Typography variant=\"h6\">Location</Typography>\r\n          <FormControl  className={styles.formElement}>\r\n            <InputLabel htmlFor=\"filterLocation\">Select Location Type</InputLabel>\r\n            <Select\r\n              labelId=\"filterLocation-label\"\r\n              id=\"filterLocation\"\r\n              value={filterLocation || \"\"}\r\n              onChange={(e) => setFilterLocation(e.target.value)}\r\n              label=\"Select Location\"\r\n            >\r\n              <MenuItem value=\"\">All</MenuItem>\r\n              <MenuItem value=\"onSite\">On Site</MenuItem>\r\n              <MenuItem value=\"workFromHome\">Work From Home</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          \r\n\r\n\r\n          {/* Job Type Filter */}\r\n          <Typography variant=\"h6\">Job Type</Typography>\r\n          <FormControl  className={styles.formElement}>\r\n            <InputLabel htmlFor=\"filterJobType\">Select Job Type</InputLabel>\r\n            <Select\r\n              labelId=\"filterJobType-label\"\r\n              id=\"filterJobType\"\r\n              value={filterJobType || \"\"}\r\n              onChange={(e) => setFilterJobType(e.target.value)}\r\n              label=\"Select Job Type\"\r\n            >\r\n              <MenuItem value=\"\">All</MenuItem>\r\n              <MenuItem value=\"fullTime\">Full Time</MenuItem>\r\n              <MenuItem value=\"partTime\">Part Time</MenuItem>\r\n              <MenuItem value=\"contract\">Contract</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Salary Filter */}\r\n          <Typography variant=\"h6\">Salary</Typography>\r\n          <div className={styles.sliderContainer}>\r\n          <Slider\r\n            value={filterSalary}\r\n            onChange={(event, newValue) => setFilterSalary(newValue)}\r\n            valueLabelDisplay=\"auto\"\r\n            min={10000}\r\n            max={100000}\r\n            step={10000}\r\n          />\r\n          </div>\r\n\r\n\r\n           {/* Duration Filter */}\r\n           <Typography variant=\"h6\">Duration</Typography>\r\n          <div className={styles.sliderContainer}>\r\n          <Slider\r\n            value={filterDuration}\r\n            onChange={(event, newValue) => setFilterDuration(newValue)}\r\n            valueLabelDisplay=\"auto\"\r\n            min={1}\r\n            max={12}\r\n            step={1}\r\n          />\r\n          </div>\r\n         \r\n\r\n          {/* Title Filter */}\r\n          <Typography variant=\"h6\">Title</Typography>\r\n          <div className={styles.formElement}>\r\n          <TextField\r\n            label=\"Select Title\"\r\n            select\r\n            value={filterTitle || \"\"}\r\n            onChange={(e) => setFilterTitle(e.target.value)}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            <MenuItem value=\"Video Editor\">Video Editor</MenuItem>\r\n            <MenuItem value=\"Graphic Designer\">Designer</MenuItem>\r\n            <MenuItem value=\"Sound Engineer\">Sound Engineer</MenuItem>\r\n            {/* Add more titles as needed */}\r\n          </TextField>\r\n          </div>\r\n         \r\n\r\n          {/* Add other filters as needed */}\r\n        </DialogContent>\r\n        </div>\r\n        \r\n        <div className={styles.applyButtonContainer}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleApplyFilters}>\r\n          Apply\r\n        </Button>\r\n      </div>     \r\n      </Dialog>\r\n\r\n\r\n      {/* SOP Dialog */}\r\n      <Dialog\r\n        open={sopDialogVisible}\r\n        onClose={() => setSopDialogVisible(false)}\r\n        className={styles.dialogContainer}\r\n      >\r\n        <div className={styles.filterContainer}>\r\n          <DialogTitle>Write Your Statement of Purpose (SOP)</DialogTitle>\r\n          <DialogContent className={styles.dialogContent}>\r\n            <TextField\r\n              label=\"SOP\"\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={sopText}\r\n              onChange={(e) => setSopText(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n        </div>\r\n\r\n        <div className={styles.applyButtonContainer}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleApplySop}>\r\n            Apply\r\n          </Button>\r\n        </div>\r\n      </Dialog>\r\n\r\n\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Jobs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}