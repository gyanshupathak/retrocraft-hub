{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Good Projects\\\\retrocraft-hub\\\\frontend\\\\src\\\\pages\\\\people\\\\People.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport NavbarProducer from \"../../components/navbar/NavbarProducer\";\nimport styles from \"./People.module.css\";\nimport { FaEnvelope } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst People = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const navigate = useNavigate();\n  const handleMessage = people => {\n    navigate(\"/messages\", {\n      state: {\n        people\n      }\n    });\n  };\n\n  // Fetch people from the database when the component mounts\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    const fetchpeople = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8001/people/getpeople\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        const peopleData = response.data;\n        if (Array.isArray(peopleData.people)) {\n          setPeople(peopleData.people);\n          localStorage.setItem(\"people\", JSON.stringify(peopleData.people));\n        } else {\n          console.error(\"Invalid data received from the API:\", peopleData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching people:\", error);\n      }\n    };\n    fetchpeople();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: people && people.map((people, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.PhotoWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: people && people.profileImage ? `http://localhost:8001/${people.profileImage.replace(/\\\\/g, \"/\")}` : \"\",\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Username: \", people.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: people.skills\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"About: \", people.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Expected Paygrade : \\u20B9\", people.expectedPaygrade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Portfolio: \", people.portfolio, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Previous Jobs: \", people.previousJobs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Contact: \", people.contact]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Job Profile: \", people.jobProfile]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(People, \"Wlx/m21uLFEwfZxr2hGqexgS4Tk=\", false, function () {\n  return [useNavigate];\n});\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavbarProducer","styles","FaEnvelope","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","People","_s","people","setPeople","navigate","handleMessage","state","token","sessionStorage","getItem","fetchpeople","response","get","headers","Authorization","withCredentials","peopleData","data","Array","isArray","localStorage","setItem","JSON","stringify","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","cardsContainer","map","index","cards","PhotoWrapper","src","profileImage","replace","alt","username","skills","description","expectedPaygrade","portfolio","previousJobs","contact","jobProfile","_c","$RefreshReg$"],"sources":["D:/Development/Good Projects/retrocraft-hub/frontend/src/pages/people/People.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport NavbarProducer from \"../../components/navbar/NavbarProducer\";\r\nimport styles from \"./People.module.css\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst People = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleMessage = (people) => {\r\n    navigate(\"/messages\", { state: { people } });\r\n  };\r\n\r\n  // Fetch people from the database when the component mounts\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    const fetchpeople = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:8001/people/getpeople\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        const peopleData = response.data;\r\n\r\n        if (Array.isArray(peopleData.people)) {\r\n          setPeople(peopleData.people);\r\n          localStorage.setItem(\"people\", JSON.stringify(peopleData.people));\r\n        } else {\r\n          console.error(\"Invalid data received from the API:\", peopleData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching people:\", error);\r\n      }\r\n    };\r\n\r\n    fetchpeople();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavbarProducer />\r\n\r\n      <div className={styles.cardsContainer}>\r\n        {people &&\r\n          people.map((people, index) => (\r\n            <div key={index} className={styles.cards}>\r\n              \r\n                \r\n              <div className={styles.PhotoWrapper}>\r\n                \r\n                  <img\r\n                    src={\r\n                      people && people.profileImage\r\n                        ? `http://localhost:8001/${people.profileImage.replace(\r\n                            /\\\\/g,\r\n                            \"/\"\r\n                          )}`\r\n                        : \"\"\r\n                    }\r\n                    alt=\"Profile\"\r\n                   \r\n                  />\r\n              </div>\r\n              \r\n              <div>\r\n                <h3>Username: {people.username}</h3>\r\n                <h3>{people.skills}</h3>\r\n                <h3>About: {people.description}</h3>\r\n                <h3>Expected Paygrade : â‚¹{people.expectedPaygrade}</h3>\r\n                <h3>Portfolio: {people.portfolio} </h3>\r\n                <h3>Previous Jobs: {people.previousJobs}</h3>\r\n                <h3>Contact: {people.contact}</h3>\r\n                <h3>Job Profile: {people.jobProfile}</h3>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default People;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}